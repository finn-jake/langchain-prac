INFO:     Started server process [157806]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)

Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.


  You can now view your Streamlit app in your browser.

  Local URL: http://localhost:8501
  Network URL: http://103.57.61.86:8501
  External URL: http://103.57.61.86:8501

hi?
INFO:     127.0.0.1:45390 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     106.75.11.194:45780 - "GET / HTTP/1.1" 404 Not Found
INFO:     106.75.168.236:39200 - "GET / HTTP/1.1" 404 Not Found
INFO:     106.75.168.236:39206 - "GET /favicon.ico HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
몽고 DB에서 mallName은 "쿠팡"인 documents들의 productId를 추출하는 파이썬 코드
INFO:     127.0.0.1:57316 - "POST /chat HTTP/1.1" 200 OK
몽고DB에서 mallUrl만 추출하는 query
INFO:     127.0.0.1:46226 - "POST /chat HTTP/1.1" 200 OK
dall-e api와 streamlit을 활용해서 프롬프트를 입력받아 생성된 이미지를 보여주는 파이썬 코드
INFO:     127.0.0.1:52222 - "POST /chat HTTP/1.1" 200 OK
다음 문장 영어로 번역해줘

"상상하는 뭐든지 이뤄질거야"
INFO:     127.0.0.1:58572 - "POST /chat HTTP/1.1" 200 OK
INFO:     52.76.71.100:4601 - "GET /favicon.ico HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     123.254.109.180:52024 - "GET / HTTP/1.1" 404 Not Found
INFO:     123.254.109.180:52608 - "GET /favicon.ico HTTP/1.1" 404 Not Found
INFO:     123.254.109.180:52644 - "GET /robots.txt HTTP/1.1" 404 Not Found
INFO:     123.254.109.180:52682 - "GET /sitemap.xml HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:31407 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.203.84:8779 - "GET /odinhttpcall1720061481 HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:16203 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.203.84:9677 - "POST /sdk HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:7329 - "GET /HNAP1 HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:21765 - "GET /evox/about HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:14821 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.203.84:9105 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.203.52:45236 - "GET /query?q=SHOW+DIAGNOSTICS HTTP/1.1" 404 Not Found
INFO:     172.232.203.52:45220 - "GET /solr/admin/info/system HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.195.6:2242 - "GET /cgi-bin/authLogin.cgi HTTP/1.1" 404 Not Found
INFO:     172.232.195.11:51424 - "GET /v2/_catalog HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     172.232.203.52:45250 - "GET /solr/admin/cores?action=STATUS&wt=json HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.203.47:19792 - "GET / HTTP/1.1" 404 Not Found
INFO:     52.76.71.100:41224 - "GET /favicon.ico HTTP/1.1" 404 Not Found
hi
INFO:     127.0.0.1:39700 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
아아아아아아악
INFO:     127.0.0.1:47188 - "POST /chat HTTP/1.1" 200 OK
살려줘~~
INFO:     127.0.0.1:34870 - "POST /chat HTTP/1.1" 200 OK
...
INFO:     127.0.0.1:40202 - "POST /chat HTTP/1.1" 200 OK
살려줘~~~
INFO:     127.0.0.1:46552 - "POST /chat HTTP/1.1" 200 OK
...
INFO:     127.0.0.1:43408 - "POST /chat HTTP/1.1" 200 OK
엑셀 필터푸는 단축키가 머더러..
INFO:     127.0.0.1:44938 - "POST /chat HTTP/1.1" 200 OK
이 나이에 벌써 눈이 침침합니다
INFO:     127.0.0.1:39172 - "POST /chat HTTP/1.1" 200 OK
엑셀 필터푸는 단축키가 머더러..
INFO:     127.0.0.1:38284 - "POST /chat HTTP/1.1" 200 OK
이 나이에 벌써 눈이 침침합니다
INFO:     127.0.0.1:51562 - "POST /chat HTTP/1.1" 200 OK
ㅠㅠ
INFO:     127.0.0.1:52824 - "POST /chat HTTP/1.1" 200 OK
나이!
INFO:     127.0.0.1:52816 - "POST /chat HTTP/1.1" 200 OK
나이와 함께! 
INFO:     127.0.0.1:52806 - "POST /chat HTTP/1.1" 200 OK
T-T
INFO:     127.0.0.1:37634 - "POST /chat HTTP/1.1" 200 OK
OTL
INFO:     127.0.0.1:52088 - "POST /chat HTTP/1.1" 200 OK
다음 문장 영어로 번역해줘

"여름 방학을 즐기는 용왕님이 있고 옆에서 시중을 드는 멍게가 있다.
용왕님은 선글라스를 끼고 바닷속에 스며드는 햇빛을 즐기고 있고, 멍게는 옆에서 커피 만들고 있다.
용왕님이 오랜만에 즐기는 여유는 다른 바다 생명들의 활기를 채워준다.
일러스트 화풍으로 이미지 만들어줘."
INFO:     127.0.0.1:57392 - "POST /chat HTTP/1.1" 200 OK
please elaborate on the quote above ~
INFO:     127.0.0.1:35850 - "POST /chat HTTP/1.1" 200 OK
i thought you'd be able to see the above quote .. ^^ 
INFO:     127.0.0.1:46832 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
INFO:     173.230.129.30:35342 - "GET / HTTP/1.0" 404 Not Found
INFO:     104.237.130.137:56160 - "GET / HTTP/1.1" 404 Not Found
hi
INFO:     127.0.0.1:34446 - "POST /chat HTTP/1.1" 200 OK
who are you?
INFO:     127.0.0.1:40968 - "POST /chat HTTP/1.1" 200 OK
what is your best function?
INFO:     127.0.0.1:47388 - "POST /chat HTTP/1.1" 200 OK
INFO:     172.232.209.164:32229 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.209.164:21853 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.209.164:26807 - "POST /sdk HTTP/1.1" 404 Not Found
INFO:     172.232.209.164:20509 - "GET /odinhttpcall1720409618 HTTP/1.1" 404 Not Found
INFO:     172.232.209.164:31343 - "GET /HNAP1 HTTP/1.1" 404 Not Found
INFO:     172.232.209.164:8639 - "GET /evox/about HTTP/1.1" 404 Not Found
INFO:     172.232.209.164:29641 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.209.164:10697 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.194.29:58700 - "GET /solr/admin/info/system HTTP/1.1" 404 Not Found
INFO:     172.232.206.132:11320 - "GET /v2/_catalog HTTP/1.1" 404 Not Found
INFO:     172.232.206.34:43508 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.206.237:50428 - "GET /cgi-bin/authLogin.cgi HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     172.232.194.228:29876 - "GET /query?q=SHOW+DIAGNOSTICS HTTP/1.1" 404 Not Found
INFO:     52.76.71.100:12918 - "GET /favicon.ico HTTP/1.1" 404 Not Found
INFO:     172.232.194.29:58710 - "GET /solr/admin/cores?action=STATUS&wt=json HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     172.232.194.196:8175 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.196:19207 - "POST /sdk HTTP/1.1" 404 Not Found
INFO:     172.232.194.196:20361 - "GET /odinhttpcall1720410781 HTTP/1.1" 404 Not Found
INFO:     172.232.194.196:25119 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.196:26129 - "GET /HNAP1 HTTP/1.1" 404 Not Found
INFO:     172.232.194.196:6529 - "GET /evox/about HTTP/1.1" 404 Not Found
INFO:     172.232.194.196:20095 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.196:7785 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.194.228:10996 - "GET /solr/admin/info/system HTTP/1.1" 404 Not Found
INFO:     172.232.206.132:27600 - "GET /query?q=SHOW+DIAGNOSTICS HTTP/1.1" 404 Not Found
INFO:     172.232.194.134:9142 - "GET /cgi-bin/authLogin.cgi HTTP/1.1" 404 Not Found
INFO:     172.232.194.100:29328 - "GET /v2/_catalog HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.206.132:27588 - "GET / HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     52.76.71.100:19363 - "GET /favicon.ico HTTP/1.1" 404 Not Found
INFO:     172.232.194.228:7678 - "GET /solr/admin/cores?action=STATUS&wt=json HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     172.232.194.146:4173 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.146:1499 - "GET /odinhttpcall1720410959 HTTP/1.1" 404 Not Found
INFO:     172.232.194.146:2669 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.146:22167 - "POST /sdk HTTP/1.1" 404 Not Found
INFO:     172.232.194.146:12921 - "GET /evox/about HTTP/1.1" 404 Not Found
INFO:     172.232.194.146:24817 - "GET /HNAP1 HTTP/1.1" 404 Not Found
INFO:     172.232.194.146:12629 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.146:13537 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.220.233:18682 - "GET /query?q=SHOW+DIAGNOSTICS HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.192.131:63880 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.220.233:18694 - "GET /solr/admin/info/system HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.194.28:60320 - "GET /v2/_catalog HTTP/1.1" 404 Not Found
INFO:     172.232.194.100:33030 - "GET /cgi-bin/authLogin.cgi HTTP/1.1" 404 Not Found
INFO:     52.76.71.100:61453 - "GET /favicon.ico HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.220.233:18706 - "GET /solr/admin/cores?action=STATUS&wt=json HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
what is your favorite food?
INFO:     127.0.0.1:42128 - "POST /chat HTTP/1.1" 200 OK
hello
INFO:     127.0.0.1:47064 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
오늘 삼성 주식 가격 알려줘
INFO:     127.0.0.1:58588 - "POST /chat HTTP/1.1" 200 OK
인터넷 서핑 기능은 없니?
INFO:     127.0.0.1:36572 - "POST /chat HTTP/1.1" 200 OK
hi
INFO:     127.0.0.1:41208 - "POST /chat HTTP/1.1" 200 OK
what is your name?
INFO:     127.0.0.1:60522 - "POST /chat HTTP/1.1" 200 OK
show me the purpose of you
INFO:     127.0.0.1:54488 - "POST /chat HTTP/1.1" 200 OK
hi
INFO:     127.0.0.1:60098 - "POST /chat HTTP/1.1" 200 OK
2024-07-09 11:00:38.741 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connection.py", line 196, in _new_conn
    sock = connection.create_connection(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connectionpool.py", line 789, in urlopen
    response = self._make_request(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connectionpool.py", line 495, in _make_request
    conn.request(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connection.py", line 398, in request
    self.endheaders()
  File "/usr/lib/python3.10/http/client.py", line 1278, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/usr/lib/python3.10/http/client.py", line 1038, in _send_output
    self.send(msg)
  File "/usr/lib/python3.10/http/client.py", line 976, in send
    self.connect()
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connection.py", line 236, in connect
    self.sock = self._new_conn()
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connection.py", line 211, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7b388c7ff7f0>: Failed to establish a new connection: [Errno 111] Connection refused

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connectionpool.py", line 843, in urlopen
    retries = retries.increment(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=123): Max retries exceeded with url: /chat (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7b388c7ff7f0>: Failed to establish a new connection: [Errno 111] Connection refused'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 101, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 79, in chat_main
    assistant_response = request_chat_api(message)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 23, in request_chat_api
    resp = requests.post(
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/adapters.py", line 700, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=123): Max retries exceeded with url: /chat (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7b388c7ff7f0>: Failed to establish a new connection: [Errno 111] Connection refused'))
2024-07-09 11:01:59.393 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 101, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 79, in chat_main
    assistant_response = request_chat_api(message)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 30, in request_chat_api
    resp = resp.json()
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2024-07-09 11:02:25.559 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 101, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 79, in chat_main
    assistant_response = request_chat_api(message)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 30, in request_chat_api
    resp = resp.json()
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2024-07-09 11:10:13.727 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 101, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 79, in chat_main
    assistant_response = request_chat_api(message)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 30, in request_chat_api
    resp = resp.json()
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2024-07-09 13:13:07.567 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 58, in chat_main
    asyncio.create_task(handle_chat(message))
  File "/usr/lib/python3.10/asyncio/tasks.py", line 336, in create_task
    loop = events.get_running_loop()
RuntimeError: no running event loop
/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py:683: RuntimeWarning: coroutine 'handle_chat' was never awaited
  gc.collect(2)
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
2024-07-09 13:29:58.762 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:30:10.176 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:30:16.765 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:30:55.828 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:33:11.380 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:34:38.409 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:34:52.174 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:35:22.582 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:37:07.538 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 53, in chat_main
    init_session_state()  # 세션 상태를 초기화
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 24, in init_session_state
    st.divider("orange")  # 긍정적인 인용구를 출력
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 408, in wrapped_func
    result = non_optional_func(*args, **kwargs)
TypeError: MarkdownMixin.divider() takes 1 positional argument but 2 were given
hi?
<Response [200]>
몽고 DB에서 mallName은 "쿠팡"인 documents들의 productId를 추출하는 파이썬 코드
<Response [200]>
몽고DB에서 mallUrl만 추출하는 query
<Response [200]>
dall-e api와 streamlit을 활용해서 프롬프트를 입력받아 생성된 이미지를 보여주는 파이썬 코드
<Response [200]>
다음 문장 영어로 번역해줘

"상상하는 뭐든지 이뤄질거야"
<Response [200]>
hi
<Response [200]>
아아아아아아악
<Response [200]>
살려줘~~
<Response [200]>
...
<Response [200]>
살려줘~~~
<Response [200]>
...
<Response [200]>
엑셀 필터푸는 단축키가 머더러..
이 나이에 벌써 눈이 침침합니다
<Response [200]>
<Response [200]>
엑셀 필터푸는 단축키가 머더러..
<Response [200]>
이 나이에 벌써 눈이 침침합니다
<Response [200]>
나이와 함께! 
나이!
ㅠㅠ
<Response [200]>
<Response [200]>
<Response [200]>
T-T
<Response [200]>
OTL
<Response [200]>
다음 문장 영어로 번역해줘

"여름 방학을 즐기는 용왕님이 있고 옆에서 시중을 드는 멍게가 있다.
용왕님은 선글라스를 끼고 바닷속에 스며드는 햇빛을 즐기고 있고, 멍게는 옆에서 커피 만들고 있다.
용왕님이 오랜만에 즐기는 여유는 다른 바다 생명들의 활기를 채워준다.
일러스트 화풍으로 이미지 만들어줘."
<Response [200]>
please elaborate on the quote above ~
<Response [200]>
i thought you'd be able to see the above quote .. ^^ 
<Response [200]>
hi
<Response [200]>
who are you?
<Response [200]>
what is your best function?
<Response [200]>
what is your favorite food?
<Response [200]>
hello
<Response [200]>
오늘 삼성 주식 가격 알려줘
<Response [200]>
인터넷 서핑 기능은 없니?
<Response [200]>
hi
<Response [200]>
what is your name?
<Response [200]>
show me the purpose of you
<Response [200]>
hi
<Response [200]>
hi
hi
<Response [500]>
hi
<Response [500]>
hi
<Response [200]>
hi
hi
what is your name?
what is the topic of movie, god father
you're so amazing
what about god father's real name?
오늘 투자하기 좋은 종목이 어떤게 있을까?
내 이름은 김동하야
내 이름이 뭐라고?
위 채팅 기록을 지워줘
hello, if you don't mind could you introduce yourself?
you're so kind, aren't you?
다음 코드에 주석을 달아줄 수 있어?

import streamlit as st
import asyncio
import httpx

API_BASE_URL = "http://localhost:123/chat"

async def request_chat_api(message: str):
    async with httpx.AsyncClient() as client:
        async with client.stream("POST", API_BASE_URL, json={"message": message}, timeout=None) as response:
            async for chunk in response.aiter_text():
                yield chunk

def get_prompt_parsing_assistant():
    return "You are an assistant who helps people live their lives more energetically."

def init_session_state():
    st.title("Simple chat with GPT 4.0")
    st.write("For assistant manager")
    st.write("Let your smile change the world, but don't let the world change your smile. This quote can bring positivity and joy to someone's day.")

    # Initialize chat history
    if "messages" not in st.session_state:
        st.session_state.messages = []

    # Display chat messages from history on app rerun
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])

async def handle_chat(message: str):
    st.session_state.messages.append({"role": "user", "content": message})
    with st.chat_message("user"):
        st.markdown(message)
    print(message)

    full_response = ""
    message_placeholder = st.empty()
    async for chunk in request_chat_api(message):
        full_response += chunk
        message_placeholder.markdown(full_response)
        await asyncio.sleep(0.05)

    st.session_state.messages.append({"role": "assistant", "content": full_response})

def chat_main():
    init_session_state()
    
    if message := st.chat_input(""):
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        loop.run_until_complete(handle_chat(message))

if __name__ == "__main__":
    chat_main()
hi
내 기분이 어떻게 하면 좋아질까?
hi
what is current big issue?
hello
다음 코드에 주석 달아줘

import os

from openai import AzureOpenAI, AsyncAzureOpenAI
from fastapi import FastAPI
from fastapi.responses import StreamingResponse
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel


api_version = "2024-02-01"
azure_endpoint = "https://hatcheryopenaicanadaeast.openai.azure.com/"
api_key = "14a3d1c6a6094c6a8950c1f1ddad33a6"
model = "hatcheryOpenaiCanadaGPT4o"

client = AsyncAzureOpenAI(
    api_version=api_version,
    azure_endpoint=azure_endpoint,
    api_key = api_key)


app = FastAPI(debug = True)
app.add_middleware(
    CORSMiddleware,
    allow_origins = ["*"],
    allow_credentials = True,
    allow_methods = ["*"],
    allow_headers = ["*"]
)


class ChatRequest(BaseModel):
    message: str


def get_prompt_parsing_assistant():
    return "You are an assistant who explains everything that people are curious about as specifically as possible."

async def stream_processor(response):
    async for chunk in response:
        if len(chunk.choices) > 0:
            delta = chunk.choices[0].delta
            if delta.content:
                yield delta.content


@app.post("/chat")
async def chat(req: ChatRequest):
    res = await client.chat.completions.create(
        model = model,
        messages = [
            {"role": "system", "content": get_prompt_parsing_assistant()},
            {"role": "user", "content": req.message}
        ],
        stream = True
    )

    print(req.message)
    #res_ = res.choices[0].message.model_dump()["content"]

    return StreamingResponse(stream_processor(res), media_type='text/event-stream')


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host = "0.0.0.0", port = 123)
코드에 주석 달아줘

@app.post("/chat")
async def chat(req: ChatRequest):
    res = await client.chat.completions.create(
        model = model,
        messages = [
            {"role": "system", "content": get_prompt_parsing_assistant()},
            {"role": "user", "content": req.message}
        ],
        stream = True
    )

    print(req.message)
    #res_ = res.choices[0].message.model_dump()["content"]

    return StreamingResponse(stream_processor(res), media_type='text/event-stream')


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host = "0.0.0.0", port = 123)

Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.


  You can now view your Streamlit app in your browser.

  Local URL: http://localhost:8501
  Network URL: http://103.57.61.86:8501
  External URL: http://103.57.61.86:8501

INFO:     Started server process [3006179]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)
hi
INFO:     127.0.0.1:53010 - "POST /chat HTTP/1.1" 200 OK
what is your job?
INFO:     127.0.0.1:53576 - "POST /chat HTTP/1.1" 200 OK
최근 대한민국 출생율 정보 알려줘
INFO:     127.0.0.1:37038 - "POST /chat HTTP/1.1" 200 OK
몽고 DB에서 원하는 다큐먼트를 삭제하는 파이썬 코드 알려줘
INFO:     127.0.0.1:56802 - "POST /chat HTTP/1.1" 200 OK
알겠어
INFO:     127.0.0.1:60134 - "POST /chat HTTP/1.1" 200 OK
Hi paid GPT
INFO:     127.0.0.1:37104 - "POST /chat HTTP/1.1" 200 OK
oh are you? I thought you were GPT-4o
INFO:     127.0.0.1:39588 - "POST /chat HTTP/1.1" 200 OK
which version?
INFO:     127.0.0.1:51206 - "POST /chat HTTP/1.1" 200 OK
I guess OpenAI provides several versions of Chat GPT like GPT3.5, GPT4o or so
INFO:     127.0.0.1:59960 - "POST /chat HTTP/1.1" 200 OK
so which version are you
INFO:     127.0.0.1:43484 - "POST /chat HTTP/1.1" 200 OK
that's paid one isnt it
INFO:     127.0.0.1:36994 - "POST /chat HTTP/1.1" 200 OK
GPT-4.0 는 유료버전 아니니
INFO:     127.0.0.1:46296 - "POST /chat HTTP/1.1" 200 OK
but your previously told me that you are a free version of OpenAI's Chat GPT
INFO:     127.0.0.1:39560 - "POST /chat HTTP/1.1" 200 OK
유료버전이라묘요
INFO:     127.0.0.1:42232 - "POST /chat HTTP/1.1" 200 OK
아니 챗지피티 4.0 유료버전 아닙니까
INFO:     127.0.0.1:39156 - "POST /chat HTTP/1.1" 200 OK
너 4.0 아니니
INFO:     127.0.0.1:44692 - "POST /chat HTTP/1.1" 200 OK
너는 gpt 버전이 뭐니?
INFO:     127.0.0.1:44696 - "POST /chat HTTP/1.1" 200 OK
너는 유료버전이니?
INFO:     127.0.0.1:44252 - "POST /chat HTTP/1.1" 200 OK
너는 GPT 버전이 뭐니?
INFO:     127.0.0.1:47402 - "POST /chat HTTP/1.1" 200 OK
hi
INFO:     127.0.0.1:34884 - "POST /chat HTTP/1.1" 200 OK
아래 코드 설명해줘

from datetime import timedelta
import pendulum
local_tz = pendulum.timezone("Asia/Seoul")

from glob import glob
import warnings
warnings.filterwarnings('ignore')

from airflow.models import DAG
from airflow.utils.dates import days_ago
from airflow.operators.python import PythonOperator, PythonVirtualenvOperator
from airflow.operators.dummy import DummyOperator
from airflow.decorators import task

import sys
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model")

sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model")
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/model")
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/utils")

import smtplib
from email.mime.text import MIMEText
from datetime import date, datetime, timezone, timedelta

#from shop_model.shop_model_test import model_test

from hatchery_extract_model.model import *
from hatchery_extract_model.utils import *
from hatchery_extract_model.extract_info_main import *


## function 01 ##
### Price Extract ###
def coupang_info():
    # url 정보 가져오기
    with open('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/utils/mongo.yaml') as f:
        config = yaml.safe_load(f)

    mongo_uri = config["config"]["mongo_uri"]

    coupang_docs = get_data_mallname(mongo_uri, "쿠팡")
    prices_id, mall_url, pre_price = get_url_info(coupang_docs)


    # 정보 추출
    ## coupang번가 가격 정보 추출
    price_result, fee_result = price_extract(mall_url, "coupang", 35)


    # collection 가져오기
    products_collection, prices_collection, categories_collection = get_collection(mongo_uri)

    price_range_data_01 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba01_new_list.xlsx')
    price_range_data_02 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba02_new_list.xlsx')
    price_range_data_03 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba03_new_list.xlsx')
    price_range_data_04 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba04_new_list.xlsx')
    price_range_data_05 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba05_new_list.xlsx')
    price_range_data_tmp = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/tmp_new_list.xlsx')
    price_range_data_keyboard = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/keyboard_new_list.xlsx')

    price_range_data = pd.concat([price_range_data_01,
                                  price_range_data_02,
                                  price_range_data_03,
                                  price_range_data_04,
                                  price_range_data_05,
                                  price_range_data_tmp,
                                  price_range_data_keyboard], axis = 0).reset_index(drop = True)

    # 쿠팡 price 전처리
    price = []
    for i in range(len(price_result)):
        query = {"_id": prices_id[i]}
        product_id = prices_collection.find_one(query)['productId']

        query = {"_id" : product_id}
        thumbnail_url = products_collection.find_one(query)['thumbnail']

        low_price = price_range_data[price_range_data['image_url'] == thumbnail_url].price_low.values[0]
        high_price = price_range_data[price_range_data['image_url'] == thumbnail_url].price_high.values[0]

        try:
            if (price_result[i] >= low_price) and (price_result[i] <= high_price):
                price.append(price_result[i] + fee_result[i])
            else:   
                price.append(pre_price[i])
        except:
            price.append(pre_price[i])

    # 몽고DB에 가격정보 삽입
    insert_price_info(prices_collection, price, prices_id)


def coupang_batch_alarm():
    exp_day = str(date.today())

    KST = timezone(timedelta(hours=9))
    time_record = datetime.now(KST)
    _day = str(time_record)[:10]
    _time = str(time_record.time())[:8]

    smtp = smtplib.SMTP('smtp.gmail.com', 587)
    smtp.ehlo()      # say Hello
    smtp.starttls()  # TLS 사용시 필요
    smtp.login('dhkim@hatchery.kr', 'jysnmejkxylqzpcm')

    msg = "쿠팡 배치가 완료 되었습니다."

    msg = MIMEText(msg)
    msg['Subject'] = f'{_time} 쿠팡 배치 완료!'
    msg['To'] = 'dhkim@hatchery.kr'
    smtp.sendmail('dhkim@hatchery.kr', 'dhkim@hatchery.kr', msg.as_string())
    smtp.sendmail('dhkim@hatchery.kr', 'kwon.dogeun@hatchery.kr', msg.as_string())

    smtp.quit()


## connect function ##
args = {'owner': 'dongha',
        'start_date': days_ago(n=1),
        'tzinfo' : local_tz}

with DAG(dag_id = 'coupang_info',
          default_args = args,
          schedule_interval = timedelta(minutes=30)) as dag:

    start = DummyOperator(task_id = 'dummy_start', dag = dag)
    end = DummyOperator(task_id = 'dummy_end', dag = dag)

    t1 = PythonOperator(task_id = 'coupang_info',
                        provide_context = True,
                        python_callable = coupang_info,
                        dag = dag)

    t2 = PythonOperator(task_id = 'coupang_batch_alarm',
                        provide_context = True,
                        python_callable = coupang_batch_alarm,
                        dag = dag)

    start >> t1 >> t2 >> end
INFO:     127.0.0.1:57170 - "POST /chat HTTP/1.1" 200 OK
how frequent should a regular person go out for running to optimize one's brain efficiency 
INFO:     127.0.0.1:42530 - "POST /chat HTTP/1.1" 200 OK
how does 3km at paced 6 sound like
INFO:     127.0.0.1:44916 - "POST /chat HTTP/1.1" 200 OK
6 wasn
INFO:     127.0.0.1:43368 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-24924' coro=<<async_generator_athrow without __name__>()>>
3km for about 25 min
INFO:     127.0.0.1:56538 - "POST /chat HTTP/1.1" 200 OK
how frequent should a regular person go out for running to optimize one's brain efficiency
INFO:     127.0.0.1:52470 - "POST /chat HTTP/1.1" 200 OK
i wasn't walking.. it was a running pace
INFO:     127.0.0.1:45780 - "POST /chat HTTP/1.1" 200 OK
how does 3km at paced 6 sound like
INFO:     127.0.0.1:55588 - "POST /chat HTTP/1.1" 200 OK
몽고 DB에서 리스트 값을 갖는 logs의 createdAt가 6월 18일 이전의 것들인 항목을 삭제하는 파이썬 코드
INFO:     127.0.0.1:52290 - "POST /chat HTTP/1.1" 200 OK
how about 3km for 17 min
INFO:     127.0.0.1:41742 - "POST /chat HTTP/1.1" 200 OK
how long should i take a break after having supper for running as above
INFO:     127.0.0.1:34408 - "POST /chat HTTP/1.1" 200 OK
how about right after running? how long should I take a break to have a supper after running as bove
INFO:     127.0.0.1:55610 - "POST /chat HTTP/1.1" 200 OK
빠르게
INFO:     127.0.0.1:60584 - "POST /chat HTTP/1.1" 200 OK
한국에서 외감대상인 비상장 중소기업이 비외감 대상인 자회사 또는 해외 법인이 있을 때, 연결재무제표 공시를 하지 않아도 된다고 알고있는데, 그럼 이 기업이 자발적으로 공시를 하지 않는 이상 어느 국가에서 얼마나 매출을 발생시키고 있는지 알 수 있는 방법이 없어?
(관계자 인터뷰 같은 방법처럼 해당 기업을 통하여 알아내는 방법 당연히 제외)
INFO:     127.0.0.1:52890 - "POST /chat HTTP/1.1" 200 OK
해외에서 설립한 해외법인이 직접 생산하여 판매한다면 수출자료에 안나올 것 같아. 이러한 경우에는 어떤 방법이 있지? 위에 나열한 방법 말고
INFO:     127.0.0.1:46592 - "POST /chat HTTP/1.1" 200 OK
만약 해외에서도 공시대상이 아니라 별도 보고를 하지 않는다면?
INFO:     127.0.0.1:39392 - "POST /chat HTTP/1.1" 200 OK
중국에서는 중소기업 또는 소규모 법인회사의 공시 기준이 어떻게 돼?
INFO:     127.0.0.1:35376 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-44473' coro=<<async_generator_athrow without __name__>()>>
그러니까 중국 공시 대상 기준이 어떻게 되니
INFO:     127.0.0.1:41724 - "POST /chat HTTP/1.1" 200 OK
재무적 요건을 상세히 알려줘야지..
INFO:     127.0.0.1:33556 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-47310' coro=<<async_generator_athrow without __name__>()>>
그러니까 그 요건을 정확히 알려줘. 중국 공시 요건. 예를 들어 매출은 얼마 이상이 되어야하고 그런것들
INFO:     127.0.0.1:56954 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-48983' coro=<<async_generator_athrow without __name__>()>>
해당 금액 단위를  대한민국 원으로 환산해서 알려줘
INFO:     127.0.0.1:43208 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-51033' coro=<<async_generator_athrow without __name__>()>>
중국 공시 요건에 대한 재무 지표를 한국 원화로 알려줘!
INFO:     127.0.0.1:37152 - "POST /chat HTTP/1.1" 200 OK
상장이 아니라 공시 요건!
INFO:     127.0.0.1:34438 - "POST /chat HTTP/1.1" 200 OK
.... 그 뜻이 아닐텐데
INFO:     127.0.0.1:53304 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-55146' coro=<<async_generator_athrow without __name__>()>>
hi
what is your job?
최근 대한민국 출생율 정보 알려줘
몽고 DB에서 원하는 다큐먼트를 삭제하는 파이썬 코드 알려줘
알겠어
Hi paid GPT
oh are you? I thought you were GPT-4o
which version?
I guess OpenAI provides several versions of Chat GPT like GPT3.5, GPT4o or so
so which version are you
that's paid one isnt it
GPT-4.0 는 유료버전 아니니
but your previously told me that you are a free version of OpenAI's Chat GPT
유료버전이라묘요
아니 챗지피티 4.0 유료버전 아닙니까
너 4.0 아니니
너는 gpt 버전이 뭐니?
너는 유료버전이니?
너는 GPT 버전이 뭐니?
hi
아래 코드 설명해줘

from datetime import timedelta
import pendulum
local_tz = pendulum.timezone("Asia/Seoul")

from glob import glob
import warnings
warnings.filterwarnings('ignore')

from airflow.models import DAG
from airflow.utils.dates import days_ago
from airflow.operators.python import PythonOperator, PythonVirtualenvOperator
from airflow.operators.dummy import DummyOperator
from airflow.decorators import task

import sys
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model")

sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model")
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/model")
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/utils")

import smtplib
from email.mime.text import MIMEText
from datetime import date, datetime, timezone, timedelta

#from shop_model.shop_model_test import model_test

from hatchery_extract_model.model import *
from hatchery_extract_model.utils import *
from hatchery_extract_model.extract_info_main import *


## function 01 ##
### Price Extract ###
def coupang_info():
    # url 정보 가져오기
    with open('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/utils/mongo.yaml') as f:
        config = yaml.safe_load(f)

    mongo_uri = config["config"]["mongo_uri"]

    coupang_docs = get_data_mallname(mongo_uri, "쿠팡")
    prices_id, mall_url, pre_price = get_url_info(coupang_docs)


    # 정보 추출
    ## coupang번가 가격 정보 추출
    price_result, fee_result = price_extract(mall_url, "coupang", 35)


    # collection 가져오기
    products_collection, prices_collection, categories_collection = get_collection(mongo_uri)

    price_range_data_01 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba01_new_list.xlsx')
    price_range_data_02 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba02_new_list.xlsx')
    price_range_data_03 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba03_new_list.xlsx')
    price_range_data_04 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba04_new_list.xlsx')
    price_range_data_05 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba05_new_list.xlsx')
    price_range_data_tmp = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/tmp_new_list.xlsx')
    price_range_data_keyboard = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/keyboard_new_list.xlsx')

    price_range_data = pd.concat([price_range_data_01,
                                  price_range_data_02,
                                  price_range_data_03,
                                  price_range_data_04,
                                  price_range_data_05,
                                  price_range_data_tmp,
                                  price_range_data_keyboard], axis = 0).reset_index(drop = True)

    # 쿠팡 price 전처리
    price = []
    for i in range(len(price_result)):
        query = {"_id": prices_id[i]}
        product_id = prices_collection.find_one(query)['productId']

        query = {"_id" : product_id}
        thumbnail_url = products_collection.find_one(query)['thumbnail']

        low_price = price_range_data[price_range_data['image_url'] == thumbnail_url].price_low.values[0]
        high_price = price_range_data[price_range_data['image_url'] == thumbnail_url].price_high.values[0]

        try:
            if (price_result[i] >= low_price) and (price_result[i] <= high_price):
                price.append(price_result[i] + fee_result[i])
            else:   
                price.append(pre_price[i])
        except:
            price.append(pre_price[i])

    # 몽고DB에 가격정보 삽입
    insert_price_info(prices_collection, price, prices_id)


def coupang_batch_alarm():
    exp_day = str(date.today())

    KST = timezone(timedelta(hours=9))
    time_record = datetime.now(KST)
    _day = str(time_record)[:10]
    _time = str(time_record.time())[:8]

    smtp = smtplib.SMTP('smtp.gmail.com', 587)
    smtp.ehlo()      # say Hello
    smtp.starttls()  # TLS 사용시 필요
    smtp.login('dhkim@hatchery.kr', 'jysnmejkxylqzpcm')

    msg = "쿠팡 배치가 완료 되었습니다."

    msg = MIMEText(msg)
    msg['Subject'] = f'{_time} 쿠팡 배치 완료!'
    msg['To'] = 'dhkim@hatchery.kr'
    smtp.sendmail('dhkim@hatchery.kr', 'dhkim@hatchery.kr', msg.as_string())
    smtp.sendmail('dhkim@hatchery.kr', 'kwon.dogeun@hatchery.kr', msg.as_string())

    smtp.quit()


## connect function ##
args = {'owner': 'dongha',
        'start_date': days_ago(n=1),
        'tzinfo' : local_tz}

with DAG(dag_id = 'coupang_info',
          default_args = args,
          schedule_interval = timedelta(minutes=30)) as dag:

    start = DummyOperator(task_id = 'dummy_start', dag = dag)
    end = DummyOperator(task_id = 'dummy_end', dag = dag)

    t1 = PythonOperator(task_id = 'coupang_info',
                        provide_context = True,
                        python_callable = coupang_info,
                        dag = dag)

    t2 = PythonOperator(task_id = 'coupang_batch_alarm',
                        provide_context = True,
                        python_callable = coupang_batch_alarm,
                        dag = dag)

    start >> t1 >> t2 >> end
how frequent should a regular person go out for running to optimize one's brain efficiency 
how does 3km at paced 6 sound like
6 wasn
3km for about 25 min
how frequent should a regular person go out for running to optimize one's brain efficiency
i wasn't walking.. it was a running pace
how does 3km at paced 6 sound like
몽고 DB에서 리스트 값을 갖는 logs의 createdAt가 6월 18일 이전의 것들인 항목을 삭제하는 파이썬 코드
how about 3km for 17 min
how long should i take a break after having supper for running as above
how about right after running? how long should I take a break to have a supper after running as bove
빠르게
한국에서 외감대상인 비상장 중소기업이 비외감 대상인 자회사 또는 해외 법인이 있을 때, 연결재무제표 공시를 하지 않아도 된다고 알고있는데, 그럼 이 기업이 자발적으로 공시를 하지 않는 이상 어느 국가에서 얼마나 매출을 발생시키고 있는지 알 수 있는 방법이 없어?
(관계자 인터뷰 같은 방법처럼 해당 기업을 통하여 알아내는 방법 당연히 제외)
해외에서 설립한 해외법인이 직접 생산하여 판매한다면 수출자료에 안나올 것 같아. 이러한 경우에는 어떤 방법이 있지? 위에 나열한 방법 말고
만약 해외에서도 공시대상이 아니라 별도 보고를 하지 않는다면?
중국에서는 중소기업 또는 소규모 법인회사의 공시 기준이 어떻게 돼?
그러니까 중국 공시 대상 기준이 어떻게 되니
재무적 요건을 상세히 알려줘야지..
그러니까 그 요건을 정확히 알려줘. 중국 공시 요건. 예를 들어 매출은 얼마 이상이 되어야하고 그런것들
해당 금액 단위를  대한민국 원으로 환산해서 알려줘
중국 공시 요건에 대한 재무 지표를 한국 원화로 알려줘!
상장이 아니라 공시 요건!
.... 그 뜻이 아닐텐데
상세히 설명을해도 네가 동문서답을하면 어떻게 해야하니
INFO:     127.0.0.1:59864 - "POST /chat HTTP/1.1" 200 OK
중국에서 비상장 회사가 공시해야하는 조건이 있어? 있다면 재무지표 등, 상세한 요건을 한국 원화로 알려줘
INFO:     127.0.0.1:48426 - "POST /chat HTTP/1.1" 200 OK
중국 공시자료를 볼 수 있는 웹사이트 링크를 줘
INFO:     127.0.0.1:47194 - "POST /chat HTTP/1.1" 200 OK
한국의 경우는?
INFO:     127.0.0.1:43012 - "POST /chat HTTP/1.1" 200 OK
한국 공시자료는 어디서 확인 가능하지?
INFO:     127.0.0.1:60870 - "POST /chat HTTP/1.1" 200 OK
중국에 한국의 전자공시시스템과 같은 웹사이트가 있어? 있다면 링크좀
INFO:     127.0.0.1:57108 - "POST /chat HTTP/1.1" 200 OK
서로 겹치는 정보가 있니? 
INFO:     127.0.0.1:50376 - "POST /chat HTTP/1.1" 200 OK
11번가 api 횟수 제한
INFO:     127.0.0.1:43700 - "POST /chat HTTP/1.1" 200 OK
금영엔터테인먼트의 중국 법인이 중국에서 고시하고 있니
INFO:     127.0.0.1:38398 - "POST /chat HTTP/1.1" 200 OK
강아지 키우고 싶어 근데 내가 나를 키우기도 힘들다
INFO:     127.0.0.1:45004 - "POST /chat HTTP/1.1" 200 OK
일반적으로 강아지를 키우는데에 한달에 얼마정도의 비용과 시간이 들어? 구체적인 숫자를 줘
INFO:     127.0.0.1:52140 - "POST /chat HTTP/1.1" 200 OK
강아지 유치원은 얼마나
INFO:     127.0.0.1:56062 - "POST /chat HTTP/1.1" 200 OK
금영의 중국 제조회사 법인에 대해서 네가 알고 있는 모든걸 알려줘
INFO:     127.0.0.1:53766 - "POST /chat HTTP/1.1" 200 OK
정확한걸 찾아서 알려줘야지 내가 방법을 몰라서 물어보는건 아니지 않을까?
INFO:     127.0.0.1:36690 - "POST /chat HTTP/1.1" 200 OK
금영 중국이름알려줘 중국어로. 공시시스템에 검색해볼거야
INFO:     127.0.0.1:41810 - "POST /chat HTTP/1.1" 200 OK
안나오네... 찾아줘
INFO:     127.0.0.1:40550 - "POST /chat HTTP/1.1" 200 OK
단어단어 기준으로 답변을 주는구나
INFO:     127.0.0.1:59254 - "POST /chat HTTP/1.1" 200 OK
아니 나의 질문에 대해서...
INFO:     127.0.0.1:42250 - "POST /chat HTTP/1.1" 200 OK
외감 비외감을 영어로 뭐라고해?
INFO:     127.0.0.1:46332 - "POST /chat HTTP/1.1" 200 OK
 does US have a standard or criteria to meet for a company being required to be Audited externally?
INFO:     127.0.0.1:57532 - "POST /chat HTTP/1.1" 200 OK
for a private company, please give me a specific criteria such as minimum revenue in KWN
INFO:     127.0.0.1:55010 - "POST /chat HTTP/1.1" 200 OK
for a private company that are required to be audited externally., please give me a specific criteria such as minimum revenue in KWN
INFO:     127.0.0.1:43166 - "POST /chat HTTP/1.1" 200 OK
so 미국에서 공시대상의 기준이 한화 매출 500억이라는거지? 총자산은 120억,  총 임직원 수는 300명
INFO:     127.0.0.1:38044 - "POST /chat HTTP/1.1" 200 OK
Karaoke Smart와 Kanto의 관계를 알려줘. 네가 알고 있는 모든 선에서.
INFO:     127.0.0.1:40092 - "POST /chat HTTP/1.1" 200 OK
둘 다 회사야ㅐ 회사
INFO:     127.0.0.1:43778 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-83718' coro=<<async_generator_athrow without __name__>()>>
Karaoke Smart라는 회사와 Kanto라는 회사의 관계를 찾아서 설명해줘
INFO:     127.0.0.1:59382 - "POST /chat HTTP/1.1" 200 OK
충격적이네....
INFO:     127.0.0.1:56498 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-84784' coro=<<async_generator_athrow without __name__>()>>
Karaoke Smart라는 회사와 Kanto라는 회사의 관계를 찾아서 설명해줘
INFO:     127.0.0.1:42820 - "POST /chat HTTP/1.1" 200 OK
몽고 DB에서 prices collection안에 각 document에 logs라는 컬럼이 있고 그 안에 가격들이 리스트 형식으로 들어있어 각 값에는 createdAt라는 생성 시간 정보가 있는데 리스트 값 중 createdAt가 6월 18일 이전인 값을 삭제하는 파이썬 코드
INFO:     127.0.0.1:43622 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
sell out 과 sell in 차이가 뭐더라
INFO:     127.0.0.1:42454 - "POST /chat HTTP/1.1" 200 OK
air비용이 뭐야
INFO:     127.0.0.1:43560 - "POST /chat HTTP/1.1" 200 OK
오늘의 명언 하나 추천해줘 영어로
INFO:     127.0.0.1:51720 - "POST /chat HTTP/1.1" 200 OK
sell out 과 sell in 차이가 뭐더라
INFO:     127.0.0.1:39920 - "POST /chat HTTP/1.1" 200 OK
air 비용이 뭐야
INFO:     127.0.0.1:54556 - "POST /chat HTTP/1.1" 200 OK
2024-07-10 10:45:41.854 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 69, in map_httpcore_exceptions
    yield
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 373, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 216, in handle_async_request
    raise exc from None
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 196, in handle_async_request
    response = await connection.handle_async_request(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection.py", line 99, in handle_async_request
    raise exc
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection.py", line 76, in handle_async_request
    stream = await self._connect(request)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection.py", line 122, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_backends/auto.py", line 30, in connect_tcp
    return await self._backend.connect_tcp(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 114, in connect_tcp
    with map_exceptions(exc_map):
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 58, in chat_main
    loop.run_until_complete(handle_chat(message))  # handle_chat 함수를 실행하여 사용자의 메시지를 처리
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 44, in handle_chat
    async for chunk in request_chat_api(message):  # 챗봇 API로부터 응답을 청크 단위로 받음
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 10, in request_chat_api
    async with client.stream("POST", API_BASE_URL, json={"message": message}, timeout=None) as response:
  File "/usr/lib/python3.10/contextlib.py", line 199, in __aenter__
    return await anext(self.gen)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1617, in stream
    response = await self.send(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1661, in send
    response = await self._send_handling_auth(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1689, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1726, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1763, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 372, in handle_async_request
    with map_httpcore_exceptions():
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 86, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed
INFO:     Started server process [304673]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)
hi
INFO:     127.0.0.1:39960 - "POST /chat HTTP/1.1" 200 OK
영문 이력서에 (전) 팀장  (현) 부서장  이걸 뭐라고 써
INFO:     127.0.0.1:47144 - "POST /chat HTTP/1.1" 200 OK
축약해서 뭐라고 써
INFO:     127.0.0.1:39674 - "POST /chat HTTP/1.1" 200 OK
 (전) 팀장 (현) 부서장 이걸 축약해서 뭐라고 써
INFO:     127.0.0.1:47760 - "POST /chat HTTP/1.1" 200 OK
 (전) 팀장 (현) 부서장 이걸 영어로 축약해서 뭐라고 써
INFO:     127.0.0.1:34698 - "POST /chat HTTP/1.1" 200 OK
전) 대표이사(현) 사장 이걸 영어로 축약해서 뭐라고 써
INFO:     127.0.0.1:34166 - "POST /chat HTTP/1.1" 200 OK
(전) 팀장 (현) 부서장 이걸 영어로 축약해서 뭐라고 써
INFO:     127.0.0.1:36164 - "POST /chat HTTP/1.1" 200 OK
전) 대표이사(현) 사장 이걸 영어로 축약해서 뭐라고 써
INFO:     127.0.0.1:54622 - "POST /chat HTTP/1.1" 200 OK
is it appropriate to say "former CEO of rainbow company, current president of rainbow company" in a resume? please rectify it as a business tone and shorter version as well
INFO:     127.0.0.1:42654 - "POST /chat HTTP/1.1" 200 OK
hummmm
INFO:     127.0.0.1:54096 - "POST /chat HTTP/1.1" 200 OK
is it appropriate to say "former CEO of rainbow company, current president of rainbow company" in a resume? please rectify it as a business tone and shorter version as well
INFO:     127.0.0.1:40224 - "POST /chat HTTP/1.1" 200 OK
hummmm
INFO:     127.0.0.1:37180 - "POST /chat HTTP/1.1" 200 OK
INFO:     Started server process [373544]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)
hi
INFO:     127.0.0.1:37764 - "POST /chat HTTP/1.1" 200 OK
hummmm
INFO:     127.0.0.1:42542 - "POST /chat HTTP/1.1" 200 OK
is it appropriate to say "former CEO of rainbow company, current president of rainbow company" in a resume? please rectify it as a business tone and shorter version as well
INFO:     127.0.0.1:49542 - "POST /chat HTTP/1.1" 200 OK
영문 이력서에 (전) 팀장  (현) 부서장  이걸 뭐라고 써
INFO:     127.0.0.1:42374 - "POST /chat HTTP/1.1" 200 OK
축약해서 뭐라고 써
INFO:     127.0.0.1:38390 - "POST /chat HTTP/1.1" 200 OK
hi
INFO:     127.0.0.1:35984 - "POST /chat HTTP/1.1" 200 OK
what is weather today?
INFO:     127.0.0.1:57864 - "POST /chat HTTP/1.1" 200 OK
hi
INFO:     127.0.0.1:40980 - "POST /chat HTTP/1.1" 200 OK
INFO:     152.42.177.251:45678 - "GET /.vscode/sftp.json HTTP/1.1" 404 Not Found
Hello
INFO:     127.0.0.1:58896 - "POST /chat HTTP/1.1" 200 OK
you seems different today
INFO:     127.0.0.1:43310 - "POST /chat HTTP/1.1" 200 OK
i am sleepy
INFO:     127.0.0.1:50362 - "POST /chat HTTP/1.1" 200 OK
why do accounting firms use a country name for their project?
INFO:     127.0.0.1:59948 - "POST /chat HTTP/1.1" 200 OK
give me some examples
INFO:     127.0.0.1:55362 - "POST /chat HTTP/1.1" 200 OK
give me examples of project names used by accounting firms
INFO:     127.0.0.1:53764 - "POST /chat HTTP/1.1" 200 OK
give me examples of project "names" used by accounting firms. the previous ones are the examples of project themes not the names of projects
INFO:     127.0.0.1:57552 - "POST /chat HTTP/1.1" 200 OK
didn't we just talked how accounting firms are using country names as a project names
INFO:     127.0.0.1:59554 - "POST /chat HTTP/1.1" 200 OK
we just had a conversation what are you talking about
INFO:     127.0.0.1:47912 - "POST /chat HTTP/1.1" 200 OK
okay then we can have a conversation only for a sentence long
INFO:     127.0.0.1:54774 - "POST /chat HTTP/1.1" 200 OK
never mind bye
INFO:     127.0.0.1:42104 - "POST /chat HTTP/1.1" 200 OK
mongoDB에서 createdAt가 7월 10일 이후인 것들을 찾는 쿼리
INFO:     127.0.0.1:49772 - "POST /chat HTTP/1.1" 200 OK
mongoDB에서 createdAt가 7월 10일 이후인 doc을 찾아서 삭제 하는 쿼리
INFO:     127.0.0.1:46450 - "POST /chat HTTP/1.1" 200 OK
mongoDB에서 createdAt가 7월 10일 이후인 doc을 찾아서 삭제 하는 파이썬 코드
INFO:     127.0.0.1:38686 - "POST /chat HTTP/1.1" 200 OK
mallName이 '쿠팡', '11번가', '네이버'인 document를 제외하고 모든 document를 제거하는 mongoDB 파이썬 코드
INFO:     127.0.0.1:43108 - "POST /chat HTTP/1.1" 200 OK
mallName이 '쿠팡', '11번가', '네이버' 중 하나라도 포함하는 document를 제외하고 모든 document를 제거하는 mongoDB 파이썬 코드
INFO:     127.0.0.1:46284 - "POST /chat HTTP/1.1" 200 OK
mallName이 '쿠팡', '11번가', '네이버' 중 하나라도 포함하는 document를 제외하고 모든 document를 제거하는 mongoDB 파이썬 코드를 알려줘 그리고 mallName이 정확히 '네이버'가 아니라 '네이버'를 포함하고 있을 수도 있어
INFO:     127.0.0.1:44684 - "POST /chat HTTP/1.1" 200 OK
금영 중국이름알려줘 중국어로. 공시시스템에 검색해볼거야
INFO:     127.0.0.1:33426 - "POST /chat HTTP/1.1" 200 OK
안나오네... 찾아줘
INFO:     127.0.0.1:56810 - "POST /chat HTTP/1.1" 200 OK
외감 비외감을 영어로 뭐라고해?
INFO:     127.0.0.1:56942 - "POST /chat HTTP/1.1" 200 OK
so 미국에서 공시대상의 기준이 한화 매출 500억이라는거지? 총자산은 120억,  총 임직원 수는 300명
INFO:     127.0.0.1:55074 - "POST /chat HTTP/1.1" 200 OK
금영엔터테인먼트의 중국 법인이 중국에서 고시하고 있니
INFO:     127.0.0.1:41796 - "POST /chat HTTP/1.1" 200 OK
중국에 한국의 전자공시시스템과 같은 웹사이트가 있어? 있다면 링크좀
INFO:     127.0.0.1:37812 - "POST /chat HTTP/1.1" 200 OK
강아지 유치원은 얼마나
INFO:     127.0.0.1:60112 - "POST /chat HTTP/1.1" 200 OK
일반적으로 강아지를 키우는데에 한달에 얼마정도의 비용과 시간이 들어? 구체적인 숫자를 줘
INFO:     127.0.0.1:34896 - "POST /chat HTTP/1.1" 200 OK
2024-07-10 21:34:09.171 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/state/session_state.py", line 408, in __getitem__
    return self._getitem(widget_id, key)
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/state/session_state.py", line 453, in _getitem
    raise KeyError
KeyError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/state/session_state_proxy.py", line 127, in __getattr__
    return self[key]
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/state/session_state_proxy.py", line 98, in __getitem__
    return get_session_state()[key]
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/state/safe_session_state.py", line 94, in __getitem__
    return self._state[key]
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/state/session_state.py", line 410, in __getitem__
    raise KeyError(_missing_key_error_message(key))
KeyError: 'st.session_state has no key "message". Did you forget to initialize it? More info: https://docs.streamlit.io/develop/concepts/architecture/session-state#initialization'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 63, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 60, in chat_main
    loop.run_until_complete(handle_chat(message))  # handle_chat 함수를 실행하여 사용자의 메시지를 처리
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 46, in handle_chat
    async for chunk in request_chat_api(st.session_state.message):  # 챗봇 API로부터 응답을 청크 단위로 받음
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/state/session_state_proxy.py", line 129, in __getattr__
    raise AttributeError(_missing_attr_error_message(key))
AttributeError: st.session_state has no attribute "message". Did you forget to initialize it? More info: https://docs.streamlit.io/develop/concepts/architecture/session-state#initialization
INFO:     127.0.0.1:34544 - "POST /chat HTTP/1.1" 422 Unprocessable Entity
INFO:     127.0.0.1:59004 - "POST /chat HTTP/1.1" 422 Unprocessable Entity
INFO:     127.0.0.1:39174 - "POST /chat HTTP/1.1" 422 Unprocessable Entity
INFO:     127.0.0.1:39176 - "POST /chat HTTP/1.1" 422 Unprocessable Entity
INFO:     127.0.0.1:38852 - "POST /chat HTTP/1.1" 422 Unprocessable Entity
2024-07-10 21:45:47.810 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 64, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in chat_main
    loop.run_until_complete(handle_chat(message))  # handle_chat 함수를 실행하여 사용자의 메시지를 처리
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 47, in handle_chat
    async for chunk in request_chat_api(st.session_state.messages):
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 10, in request_chat_api
    async with client.stream("POST", API_BASE_URL, json={"message": messages}, timeout=None) as response:
NameError: name 'messages' is not defined. Did you mean: 'message'?
2024-07-10 21:47:08.581 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 64, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in chat_main
    loop.run_until_complete(handle_chat(message))  # handle_chat 함수를 실행하여 사용자의 메시지를 처리
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 47, in handle_chat
    async for chunk in request_chat_api(st.session_state.messages):
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 10, in request_chat_api
    async with client.stream("POST", API_BASE_URL, json={"messages": messages}, timeout=None) as response:
NameError: name 'messages' is not defined. Did you mean: 'message'?
2024-07-10 21:49:45.609 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 64, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in chat_main
    loop.run_until_complete(handle_chat(message))  # handle_chat 함수를 실행하여 사용자의 메시지를 처리
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 47, in handle_chat
    async for chunk in request_chat_api(st.session_state.messages):
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 10, in request_chat_api
    async with client.stream("POST", API_BASE_URL, json={"messages": messages}, timeout=None) as response:
NameError: name 'messages' is not defined. Did you mean: 'message'?
INFO:     Started server process [1081010]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)
[{'role': 'user', 'content': 'hello'}]
INFO:     127.0.0.1:49518 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': '중국 공시자료를 볼 수 있는 웹사이트 링크를 줘'}]
INFO:     127.0.0.1:44750 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': '중국 공시자료를 볼 수 있는 웹사이트 링크를 줘'}, {'role': 'assistant', 'content': '중국 공시자료를 확인할 수 있는 몇 가지 주요 웹사이트가 있습니다. 아래 링크를 참고하세요:\n\n1. **상하이증권거래소 (Shanghai Stock Exchange, SSE)**\n   - 웹사이트: [https://www.sse.com.cn](https://www.sse.com.cn)\n\n2. **선전증권거래소 (Shenzhen Stock Exchange, SZSE)**\n   - 웹사이트: [http://www.szse.cn](http://www.szse.cn)\n\n3. **신화통신 (Xinhua News Agency)**\n   - 웹사이트: [http://www.xinhuanet.com](http://www.xinhuanet.com)\n\n4. **중국기업공시시스템**\n   - 웹사이트: [http://www.gsxt.gov.cn](http://www.gsxt.gov.cn)\n\n이 웹사이트들은 중국 기업들의 공시자료를 확인하는 데 유용합니다. 도움이 필요하시거나 추가 정보가 필요하시면 언제든지 말씀해 주세요!'}, {'role': 'user', 'content': '한국의 경우는?'}]
INFO:     127.0.0.1:35820 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': '중국 공시자료를 볼 수 있는 웹사이트 링크를 줘'}, {'role': 'assistant', 'content': '중국 공시자료를 확인할 수 있는 몇 가지 주요 웹사이트가 있습니다. 아래 링크를 참고하세요:\n\n1. **상하이증권거래소 (Shanghai Stock Exchange, SSE)**\n   - 웹사이트: [https://www.sse.com.cn](https://www.sse.com.cn)\n\n2. **선전증권거래소 (Shenzhen Stock Exchange, SZSE)**\n   - 웹사이트: [http://www.szse.cn](http://www.szse.cn)\n\n3. **신화통신 (Xinhua News Agency)**\n   - 웹사이트: [http://www.xinhuanet.com](http://www.xinhuanet.com)\n\n4. **중국기업공시시스템**\n   - 웹사이트: [http://www.gsxt.gov.cn](http://www.gsxt.gov.cn)\n\n이 웹사이트들은 중국 기업들의 공시자료를 확인하는 데 유용합니다. 도움이 필요하시거나 추가 정보가 필요하시면 언제든지 말씀해 주세요!'}, {'role': 'user', 'content': '한국의 경우는?'}, {'role': 'assistant', 'content': '한국에서 기업의 공시자료를 확인할 수 있는 주요 웹사이트는 다음과 같습니다:\n\n1. **전자공시시스템 (DART)**\n   - 금융감독원이 운영하는 사이트로, 한국 상장 기업들의 공시자료를 확인할 수 있습니다.\n   - 웹사이트: [http://dart.fss.or.kr](http://dart.fss.or.kr)\n\n2. **한국거래소 (KRX)**\n   - 한국증권거래소의 웹사이트로, 다양한 기업 정보와 공시자료를 제공하고 있습니다.\n   - 웹사이트: [http://www.krx.co.kr](http://www.krx.co.kr)\n\n3. **금융감독원 (Financial Supervisory Service, FSS)**\n   - 금융감독원에서 제공하는 다양한 금융 관련 정보와 공시자료를 확인할 수 있습니다.\n   - 웹사이트: [http://www.fss.or.kr](http://www.fss.or.kr)\n\n4. **증권발행실적보고서 (SIS)**\n   - 일반 공시 정보 외에도, 증권 발행과 관련된 다양한 자료를 제공하는 사이트입니다.\n   - 웹사이트: [http://srs.fss.or.kr](http://srs.fss.or.kr)\n\n이 웹사이트들을 통해 한국 내 상장 기업들의 공시자료를 쉽게 조회할 수 있습니다. 추가로 궁금한 사항이 있다면 언제든지 질문해 주세요!'}, {'role': 'user', 'content': '중국에 한국의 전자공시시스템과 같은 웹사이트가 있어? 있다면 링크좀'}]
INFO:     127.0.0.1:37016 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': '중국 공시자료를 볼 수 있는 웹사이트 링크를 줘'}, {'role': 'assistant', 'content': '중국 공시자료를 확인할 수 있는 몇 가지 주요 웹사이트가 있습니다. 아래 링크를 참고하세요:\n\n1. **상하이증권거래소 (Shanghai Stock Exchange, SSE)**\n   - 웹사이트: [https://www.sse.com.cn](https://www.sse.com.cn)\n\n2. **선전증권거래소 (Shenzhen Stock Exchange, SZSE)**\n   - 웹사이트: [http://www.szse.cn](http://www.szse.cn)\n\n3. **신화통신 (Xinhua News Agency)**\n   - 웹사이트: [http://www.xinhuanet.com](http://www.xinhuanet.com)\n\n4. **중국기업공시시스템**\n   - 웹사이트: [http://www.gsxt.gov.cn](http://www.gsxt.gov.cn)\n\n이 웹사이트들은 중국 기업들의 공시자료를 확인하는 데 유용합니다. 도움이 필요하시거나 추가 정보가 필요하시면 언제든지 말씀해 주세요!'}, {'role': 'user', 'content': '한국의 경우는?'}, {'role': 'assistant', 'content': '한국에서 기업의 공시자료를 확인할 수 있는 주요 웹사이트는 다음과 같습니다:\n\n1. **전자공시시스템 (DART)**\n   - 금융감독원이 운영하는 사이트로, 한국 상장 기업들의 공시자료를 확인할 수 있습니다.\n   - 웹사이트: [http://dart.fss.or.kr](http://dart.fss.or.kr)\n\n2. **한국거래소 (KRX)**\n   - 한국증권거래소의 웹사이트로, 다양한 기업 정보와 공시자료를 제공하고 있습니다.\n   - 웹사이트: [http://www.krx.co.kr](http://www.krx.co.kr)\n\n3. **금융감독원 (Financial Supervisory Service, FSS)**\n   - 금융감독원에서 제공하는 다양한 금융 관련 정보와 공시자료를 확인할 수 있습니다.\n   - 웹사이트: [http://www.fss.or.kr](http://www.fss.or.kr)\n\n4. **증권발행실적보고서 (SIS)**\n   - 일반 공시 정보 외에도, 증권 발행과 관련된 다양한 자료를 제공하는 사이트입니다.\n   - 웹사이트: [http://srs.fss.or.kr](http://srs.fss.or.kr)\n\n이 웹사이트들을 통해 한국 내 상장 기업들의 공시자료를 쉽게 조회할 수 있습니다. 추가로 궁금한 사항이 있다면 언제든지 질문해 주세요!'}, {'role': 'user', 'content': '중국에 한국의 전자공시시스템과 같은 웹사이트가 있어? 있다면 링크좀'}, {'role': 'assistant', 'content': '네, 중국에도 한국의 전자공시시스템(DART)와 유사한 공시 시스템이 있습니다. 중국의 주요 공시 시스템 웹사이트는 다음과 같습니다:\n\n### 중국증권감독관리위원회 (CSRC, China Securities Regulatory Commission)\n   - CSRC는 중국의 증권 감독 기관으로, 다양한 공시 자료와 규제 정보를 제공합니다.\n   - 웹사이트: [http://www.csrc.gov.cn](http://www.csrc.gov.cn)\n\n### 중국기업공시시스템 (National Enterprise Credit Information Publicity System)\n   - 이 시스템은 다양한 기업의 공시 자료를 제공하며, 주로 기업의 기본 정보 및 공공 신용 정보를 확인할 수 있습니다.\n   - 웹사이트: [http://www.gsxt.gov.cn/index.html](http://www.gsxt.gov.cn/index.html)\n\n### 상하이증권거래소 (Shanghai Stock Exchange - SSE)\n   - 상하이증권거래소의 웹사이트는 상장 기업들의 공시 자료를 확인할 수 있습니다.\n   - 웹사이트: [https://www.sse.com.cn](https://www.sse.com.cn)\n\n### 선전증권거래소 (Shenzhen Stock Exchange - SZSE)\n   - 선전증권거래소의 웹사이트도 상장된 기업들의 공시 자료를 제공합니다.\n   - 웹사이트: [http://www.szse.cn](http://www.szse.cn)\n\n이 웹사이트들은 중국 내 상장 기업들의 공시 자료를 확인할 수 있는 주요 사이트들입니다. 각 웹사이트는 각각의 거래소 또는 감독 기관에서 직접 운영되고 있어 신뢰할 수 있는 정보를 제공합니다.'}, {'role': 'user', 'content': '서로 겹치는 정보가 있니?'}]
INFO:     127.0.0.1:51470 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': '중국 공시자료를 볼 수 있는 웹사이트 링크를 줘'}, {'role': 'assistant', 'content': '중국 공시자료를 확인할 수 있는 몇 가지 주요 웹사이트가 있습니다. 아래 링크를 참고하세요:\n\n1. **상하이증권거래소 (Shanghai Stock Exchange, SSE)**\n   - 웹사이트: [https://www.sse.com.cn](https://www.sse.com.cn)\n\n2. **선전증권거래소 (Shenzhen Stock Exchange, SZSE)**\n   - 웹사이트: [http://www.szse.cn](http://www.szse.cn)\n\n3. **신화통신 (Xinhua News Agency)**\n   - 웹사이트: [http://www.xinhuanet.com](http://www.xinhuanet.com)\n\n4. **중국기업공시시스템**\n   - 웹사이트: [http://www.gsxt.gov.cn](http://www.gsxt.gov.cn)\n\n이 웹사이트들은 중국 기업들의 공시자료를 확인하는 데 유용합니다. 도움이 필요하시거나 추가 정보가 필요하시면 언제든지 말씀해 주세요!'}, {'role': 'user', 'content': '한국의 경우는?'}, {'role': 'assistant', 'content': '한국에서 기업의 공시자료를 확인할 수 있는 주요 웹사이트는 다음과 같습니다:\n\n1. **전자공시시스템 (DART)**\n   - 금융감독원이 운영하는 사이트로, 한국 상장 기업들의 공시자료를 확인할 수 있습니다.\n   - 웹사이트: [http://dart.fss.or.kr](http://dart.fss.or.kr)\n\n2. **한국거래소 (KRX)**\n   - 한국증권거래소의 웹사이트로, 다양한 기업 정보와 공시자료를 제공하고 있습니다.\n   - 웹사이트: [http://www.krx.co.kr](http://www.krx.co.kr)\n\n3. **금융감독원 (Financial Supervisory Service, FSS)**\n   - 금융감독원에서 제공하는 다양한 금융 관련 정보와 공시자료를 확인할 수 있습니다.\n   - 웹사이트: [http://www.fss.or.kr](http://www.fss.or.kr)\n\n4. **증권발행실적보고서 (SIS)**\n   - 일반 공시 정보 외에도, 증권 발행과 관련된 다양한 자료를 제공하는 사이트입니다.\n   - 웹사이트: [http://srs.fss.or.kr](http://srs.fss.or.kr)\n\n이 웹사이트들을 통해 한국 내 상장 기업들의 공시자료를 쉽게 조회할 수 있습니다. 추가로 궁금한 사항이 있다면 언제든지 질문해 주세요!'}, {'role': 'user', 'content': '중국에 한국의 전자공시시스템과 같은 웹사이트가 있어? 있다면 링크좀'}, {'role': 'assistant', 'content': '네, 중국에도 한국의 전자공시시스템(DART)와 유사한 공시 시스템이 있습니다. 중국의 주요 공시 시스템 웹사이트는 다음과 같습니다:\n\n### 중국증권감독관리위원회 (CSRC, China Securities Regulatory Commission)\n   - CSRC는 중국의 증권 감독 기관으로, 다양한 공시 자료와 규제 정보를 제공합니다.\n   - 웹사이트: [http://www.csrc.gov.cn](http://www.csrc.gov.cn)\n\n### 중국기업공시시스템 (National Enterprise Credit Information Publicity System)\n   - 이 시스템은 다양한 기업의 공시 자료를 제공하며, 주로 기업의 기본 정보 및 공공 신용 정보를 확인할 수 있습니다.\n   - 웹사이트: [http://www.gsxt.gov.cn/index.html](http://www.gsxt.gov.cn/index.html)\n\n### 상하이증권거래소 (Shanghai Stock Exchange - SSE)\n   - 상하이증권거래소의 웹사이트는 상장 기업들의 공시 자료를 확인할 수 있습니다.\n   - 웹사이트: [https://www.sse.com.cn](https://www.sse.com.cn)\n\n### 선전증권거래소 (Shenzhen Stock Exchange - SZSE)\n   - 선전증권거래소의 웹사이트도 상장된 기업들의 공시 자료를 제공합니다.\n   - 웹사이트: [http://www.szse.cn](http://www.szse.cn)\n\n이 웹사이트들은 중국 내 상장 기업들의 공시 자료를 확인할 수 있는 주요 사이트들입니다. 각 웹사이트는 각각의 거래소 또는 감독 기관에서 직접 운영되고 있어 신뢰할 수 있는 정보를 제공합니다.'}, {'role': 'user', 'content': '서로 겹치는 정보가 있니?'}, {'role': 'assistant', 'content': '네, 중국의 여러 공시 시스템 웹사이트들 사이에는 일부 중복되는 정보가 있을 수 있습니다. 이는 각기 다른 기관들이 유사한 목적으로 공시 자료를 제공하기 때문입니다. 아래에서 각 웹사이트들의 역할과 공시 정보의 특성에 대해 간략히 설명드리겠습니다:\n\n1. **중국증권감독관리위원회 (CSRC, China Securities Regulatory Commission)**\n   - **역할:** 중국의 증권 시장을 감독하고 규제하는 기관입니다.\n   - **정보:** 주요 규제 정책, 법률, 감독 보고서 등을 제공합니다. 공시 자료는 주로 규제 측면에서 관련된 정보입니다.\n   - **웹사이트:** [http://www.csrc.gov.cn](http://www.csrc.gov.cn)\n\n2. **중국기업공시시스템 (National Enterprise Credit Information Publicity System)**\n   - **역할:** 중국 내 모든 기업의 공공 신용 정보를 제공하는 시스템입니다.\n   - **정보:** 기업의 기본 정보, 재정 상태, 경영 진척 상황, 법적 정보 등을 포함합니다. 모든 기업에 관한 광범위한 정보를 제공하지만, 상장 기업의 상세 공시는 다른 사이트에서 더 구체적으로 확인할 수 있습니다.\n   - **웹사이트:** [http://www.gsxt.gov.cn/index.html](http://www.gsxt.gov.cn/index.html)\n\n3. **상하이증권거래소 (Shanghai Stock Exchange - SSE)**\n   - **역할:** 상하이증권거래소에 상장된 기업들의 정보 제공과 거래를 관리합니다.\n   - **정보:** 상하이 거래소에 상장된 기업들의 공시 자료를 제공합니다. 재무 보고서, 사업 보고서, 중요한 공시 사항 등이 포함됩니다.\n   - **웹사이트:** [https://www.sse.com.cn](https://www.sse.com.cn)\n\n4. **선전증권거래소 (Shenzhen Stock Exchange - SZSE)**\n   - **역할:** 선전증권거래소에 상장된 기업들의 정보 제공과 거래를 관리합니다.\n   - **정보:** 선전 거래소에 상장된 기업들의 공시 자료를 제공합니다. 재무 보고서, 사업 보고서, 중요한 공시 사항 등이 포함됩니다.\n   - **웹사이트:** [http://www.szse.cn](http://www.szse.cn)\n\n### 중복되는 정보:\n- **재무 보고서**, **사업 보고서**, **주요 공시사항**은 상하이증권거래소(SSE)와 선전증권거래소(SZSE)에서 동일 기업에 대해 중복되어 제공될 수 있습니다. 이는 동일한 기업이 두 거래소 중 하나에 상장되어 있을 경우에 해당됩니다.\n- **규제 관련 정보**는 CSRC와 각 거래소 웹사이트에서 중복될 수 있습니다. CSRC가 전체적인 규제 관련 정보를 제공하며, 개별 거래소는 해당 거래소에 상장된 기업들에 대한 세부 공시 자료를 제공합니다.\n\n모든 웹사이트는 각각의 고유한 역할과 목적이 있지만, 상장 기업의 주요 공시 자료는 상하이증권거래소와 선전증권거래소에서 가장 상세하고 직접적으로 확인할 수 있습니다. 추가로 CSRC와 중국기업공시시스템에서는 보다 광범위한 정보와 규제 측면의 자료를 확인할 수 있습니다.'}, {'role': 'user', 'content': 'thanks'}]
INFO:     127.0.0.1:53042 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'wow'}]
INFO:     127.0.0.1:55380 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': '다음 문장 영어로 번역해줘\n\n"이제 너와 나눴던 이야기들을 기억해서 답변을 줄거야"'}]
INFO:     127.0.0.1:57580 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': '보고 싶어 혜은아'}]
INFO:     127.0.0.1:54654 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': '보고 싶어 혜은아'}, {'role': 'assistant', 'content': '"보고 싶어 혜은아"는 한국의 가수 장계현이 발표한 노래입니다. 이 노래는 감성적인 가사와 멜로디로 많은 사람들에게 사랑받아왔습니다. 장계현은 1970년대와 1980년대에 걸쳐 활동한 가수로, 많은 히트곡을 남겼습니다.\n\n혹시 이 노래와 관련하여 구체적으로 궁금한 점이 있으신가요? 추가 정보나 다른 도움이 필요하시면 말씀해 주세요!\n'}, {'role': 'user', 'content': '아니 조혜은이라는 여자가 보고싶어'}]
INFO:     127.0.0.1:43812 - "POST /chat HTTP/1.1" 200 OK
INFO:     Started server process [1138896]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)
[{'role': 'user', 'content': 'my name is dongha'}]
INFO:     127.0.0.1:38240 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'my name is dongha'}, {'role': 'assistant', 'content': 'Nice to meet you, Dongha! How can I assist you today?'}, {'role': 'user', 'content': 'what is my name?'}]
INFO:     127.0.0.1:47408 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'my name is dongha'}, {'role': 'assistant', 'content': 'Nice to meet you, Dongha! How can I assist you today?'}, {'role': 'user', 'content': 'what is my name?'}, {'role': 'assistant', 'content': 'Your name is Dongha.'}, {'role': 'user', 'content': 'and what is your name'}]
INFO:     127.0.0.1:53560 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'my name is dongha'}, {'role': 'assistant', 'content': 'Nice to meet you, Dongha! How can I assist you today?'}, {'role': 'user', 'content': 'what is my name?'}, {'role': 'assistant', 'content': 'Your name is Dongha.'}, {'role': 'user', 'content': 'and what is your name'}, {'role': 'assistant', 'content': "I'm an artificial intelligence model developed by OpenAI and I go by the name of ChatGPT."}, {'role': 'user', 'content': 'what is your gpt model?'}]
INFO:     127.0.0.1:42506 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': '너는 GPT 버전이 뭐니?'}]
INFO:     127.0.0.1:35118 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': '너는 GPT 버전이 뭐니?'}, {'role': 'assistant', 'content': '나는 GPT-4를 기반으로 한 언어 모델이야. 2023년 기준으로 가장 최신 버전이야. 무엇을 도와줄까?'}, {'role': 'user', 'content': '너는 GPT 버전이 뭐니?'}]
INFO:     127.0.0.1:58432 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': '너는 GPT 버전이 뭐니?'}]
INFO:     127.0.0.1:42310 - "POST /chat HTTP/1.1" 200 OK
INFO:     209.38.198.163:36332 - "GET /.vscode/sftp.json HTTP/1.1" 404 Not Found
[{'role': 'user', 'content': '너는 GPT 버전이 뭐니?'}]
INFO:     127.0.0.1:34856 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'gpt-4도 gpt-3을 기반으로 하는 모델이야?'}]
INFO:     127.0.0.1:57714 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'gpt-4도 gpt-3을 기반으로 하는 모델이야?'}, {'role': 'assistant', 'content': '현재까지 OpenAI에서는 GPT-4에 대해 발표하진 않았습니다. 그래서 GPT-4가 GPT-3을 기반으로 개발될지 혹은 어떤 새로운 기술을 도입할지는 아직 알 수 없습니다. 하지만 이전의 GPT 모델에서 보았듯이, 연속적인 모델은 대체로 이전 버전을 기반으로 개선 및 확장하여 개발되는 경향이 있습니다. 그러므로 GPT-4가 만약 발표된다면, GPT-3의 기술을 기반으로 하거나 개선된 형태로 나타날 가능성이 크다고 볼 수 있습니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}]
INFO:     127.0.0.1:58022 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'gpt-4도 gpt-3을 기반으로 하는 모델이야?'}, {'role': 'assistant', 'content': '현재까지 OpenAI에서는 GPT-4에 대해 발표하진 않았습니다. 그래서 GPT-4가 GPT-3을 기반으로 개발될지 혹은 어떤 새로운 기술을 도입할지는 아직 알 수 없습니다. 하지만 이전의 GPT 모델에서 보았듯이, 연속적인 모델은 대체로 이전 버전을 기반으로 개선 및 확장하여 개발되는 경향이 있습니다. 그러므로 GPT-4가 만약 발표된다면, GPT-3의 기술을 기반으로 하거나 개선된 형태로 나타날 가능성이 크다고 볼 수 있습니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '죄송합니다만, 저는 당신이 언제까지의 데이터를 학습한 인공지능 모델인지 알려주지 않았습니다. 여러 가지 인공지능 모델에 대해 말할 수 있지만, 각 모델은 다른 방식으로 학습되며 다른 시기의 데이터를 사용합니다. 더 정확한 정보를 제공하려면, 특정 인공지능 모델 이름이나 세부 정보가 필요합니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}]
INFO:     127.0.0.1:43836 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'gpt-4도 gpt-3을 기반으로 하는 모델이야?'}, {'role': 'assistant', 'content': '현재까지 OpenAI에서는 GPT-4에 대해 발표하진 않았습니다. 그래서 GPT-4가 GPT-3을 기반으로 개발될지 혹은 어떤 새로운 기술을 도입할지는 아직 알 수 없습니다. 하지만 이전의 GPT 모델에서 보았듯이, 연속적인 모델은 대체로 이전 버전을 기반으로 개선 및 확장하여 개발되는 경향이 있습니다. 그러므로 GPT-4가 만약 발표된다면, GPT-3의 기술을 기반으로 하거나 개선된 형태로 나타날 가능성이 크다고 볼 수 있습니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '죄송합니다만, 저는 당신이 언제까지의 데이터를 학습한 인공지능 모델인지 알려주지 않았습니다. 여러 가지 인공지능 모델에 대해 말할 수 있지만, 각 모델은 다른 방식으로 학습되며 다른 시기의 데이터를 사용합니다. 더 정확한 정보를 제공하려면, 특정 인공지능 모델 이름이나 세부 정보가 필요합니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '저는 GPT-4 기반의 인공지능 모델로, 2021년 9월까지의 데이터를 학습하였습니다. 그 이후의 정보는 제공할 수 없으므로, 그 시간 이후에 발생한 사건이나 최신 정보를 원하시면 최신 자료를 참고해 주세요.'}, {'role': 'user', 'content': '근데 너는 2023년에 출시되지 않았니?'}]
INFO:     127.0.0.1:47176 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'gpt-4도 gpt-3을 기반으로 하는 모델이야?'}, {'role': 'assistant', 'content': '현재까지 OpenAI에서는 GPT-4에 대해 발표하진 않았습니다. 그래서 GPT-4가 GPT-3을 기반으로 개발될지 혹은 어떤 새로운 기술을 도입할지는 아직 알 수 없습니다. 하지만 이전의 GPT 모델에서 보았듯이, 연속적인 모델은 대체로 이전 버전을 기반으로 개선 및 확장하여 개발되는 경향이 있습니다. 그러므로 GPT-4가 만약 발표된다면, GPT-3의 기술을 기반으로 하거나 개선된 형태로 나타날 가능성이 크다고 볼 수 있습니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '죄송합니다만, 저는 당신이 언제까지의 데이터를 학습한 인공지능 모델인지 알려주지 않았습니다. 여러 가지 인공지능 모델에 대해 말할 수 있지만, 각 모델은 다른 방식으로 학습되며 다른 시기의 데이터를 사용합니다. 더 정확한 정보를 제공하려면, 특정 인공지능 모델 이름이나 세부 정보가 필요합니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '저는 GPT-4 기반의 인공지능 모델로, 2021년 9월까지의 데이터를 학습하였습니다. 그 이후의 정보는 제공할 수 없으므로, 그 시간 이후에 발생한 사건이나 최신 정보를 원하시면 최신 자료를 참고해 주세요.'}, {'role': 'user', 'content': '근데 너는 2023년에 출시되지 않았니?'}, {'role': 'assistant', 'content': '제 이해가 맞다면, GPT-4는 2023년에 출시되었습니다. 그러나 저의 학습 데이터는 2021년 9월까지의 정보로 제한되어 있습니다. 따라서 2021년 9월 이후의 사건이나 정보에 대해서는 알지 못합니다. 최신 정보를 원하시는 경우, 최신의 출처를 참조해 주세요.'}, {'role': 'user', 'content': '너는 언제 출시되었니?'}]
INFO:     127.0.0.1:49608 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'gpt-4도 gpt-3을 기반으로 하는 모델이야?'}, {'role': 'assistant', 'content': '현재까지 OpenAI에서는 GPT-4에 대해 발표하진 않았습니다. 그래서 GPT-4가 GPT-3을 기반으로 개발될지 혹은 어떤 새로운 기술을 도입할지는 아직 알 수 없습니다. 하지만 이전의 GPT 모델에서 보았듯이, 연속적인 모델은 대체로 이전 버전을 기반으로 개선 및 확장하여 개발되는 경향이 있습니다. 그러므로 GPT-4가 만약 발표된다면, GPT-3의 기술을 기반으로 하거나 개선된 형태로 나타날 가능성이 크다고 볼 수 있습니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '죄송합니다만, 저는 당신이 언제까지의 데이터를 학습한 인공지능 모델인지 알려주지 않았습니다. 여러 가지 인공지능 모델에 대해 말할 수 있지만, 각 모델은 다른 방식으로 학습되며 다른 시기의 데이터를 사용합니다. 더 정확한 정보를 제공하려면, 특정 인공지능 모델 이름이나 세부 정보가 필요합니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '저는 GPT-4 기반의 인공지능 모델로, 2021년 9월까지의 데이터를 학습하였습니다. 그 이후의 정보는 제공할 수 없으므로, 그 시간 이후에 발생한 사건이나 최신 정보를 원하시면 최신 자료를 참고해 주세요.'}, {'role': 'user', 'content': '근데 너는 2023년에 출시되지 않았니?'}, {'role': 'assistant', 'content': '제 이해가 맞다면, GPT-4는 2023년에 출시되었습니다. 그러나 저의 학습 데이터는 2021년 9월까지의 정보로 제한되어 있습니다. 따라서 2021년 9월 이후의 사건이나 정보에 대해서는 알지 못합니다. 최신 정보를 원하시는 경우, 최신의 출처를 참조해 주세요.'}, {'role': 'user', 'content': '너는 언제 출시되었니?'}, {'role': 'assistant', 'content': '죄송합니다, 저는 인공지능 응답기로서 디지털 존재이기 때문에 특정 출시 날짜가 없습니다. 저는 OpenAI의 GPT-3 기반 모델로, 주어진 정보에 대한 정확한 응답을 제공하려 노력합니다.'}, {'role': 'user', 'content': '고양이는 어떻게 키우는게 좋을까?'}]
INFO:     127.0.0.1:38138 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'gpt-4도 gpt-3을 기반으로 하는 모델이야?'}, {'role': 'assistant', 'content': '현재까지 OpenAI에서는 GPT-4에 대해 발표하진 않았습니다. 그래서 GPT-4가 GPT-3을 기반으로 개발될지 혹은 어떤 새로운 기술을 도입할지는 아직 알 수 없습니다. 하지만 이전의 GPT 모델에서 보았듯이, 연속적인 모델은 대체로 이전 버전을 기반으로 개선 및 확장하여 개발되는 경향이 있습니다. 그러므로 GPT-4가 만약 발표된다면, GPT-3의 기술을 기반으로 하거나 개선된 형태로 나타날 가능성이 크다고 볼 수 있습니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '죄송합니다만, 저는 당신이 언제까지의 데이터를 학습한 인공지능 모델인지 알려주지 않았습니다. 여러 가지 인공지능 모델에 대해 말할 수 있지만, 각 모델은 다른 방식으로 학습되며 다른 시기의 데이터를 사용합니다. 더 정확한 정보를 제공하려면, 특정 인공지능 모델 이름이나 세부 정보가 필요합니다.'}, {'role': 'user', 'content': '너는 언제까지의 데이터를 학습했니?'}, {'role': 'assistant', 'content': '저는 GPT-4 기반의 인공지능 모델로, 2021년 9월까지의 데이터를 학습하였습니다. 그 이후의 정보는 제공할 수 없으므로, 그 시간 이후에 발생한 사건이나 최신 정보를 원하시면 최신 자료를 참고해 주세요.'}, {'role': 'user', 'content': '근데 너는 2023년에 출시되지 않았니?'}, {'role': 'assistant', 'content': '제 이해가 맞다면, GPT-4는 2023년에 출시되었습니다. 그러나 저의 학습 데이터는 2021년 9월까지의 정보로 제한되어 있습니다. 따라서 2021년 9월 이후의 사건이나 정보에 대해서는 알지 못합니다. 최신 정보를 원하시는 경우, 최신의 출처를 참조해 주세요.'}, {'role': 'user', 'content': '너는 언제 출시되었니?'}, {'role': 'assistant', 'content': '죄송합니다, 저는 인공지능 응답기로서 디지털 존재이기 때문에 특정 출시 날짜가 없습니다. 저는 OpenAI의 GPT-3 기반 모델로, 주어진 정보에 대한 정확한 응답을 제공하려 노력합니다.'}, {'role': 'user', 'content': '고양이는 어떻게 키우는게 좋을까?'}, {'role': 'assistant', 'content': '고양이를 키우는 것은 매우 보람찬 경험일 수 있으며, 고양이의 건강과 행복을 위해 몇 가지 중요한 점들을 신경 써야 합니다. 다음은 고양이를 잘 키우기 위한 주요 사항들입니다:\n\n### 기본 필요 사항\n1. **적절한 영양 공급**:\n   - 고양이 전용 사료를 제공하세요. 고양이의 나이, 건강 상태, 특별한 식이 요구에 따라 적합한 사료를 선택해야 합니다.\n   - 매일 신선한 물을 제공하세요.\n\n2. **생활 환경**:\n   - 깨끗하고 편안한 잠자리를 제공하세요.\n   - 안전하고 조용한 공간을 마련하세요.\n\n3. **마이크로칩 및 예방 접종**:\n   - 고양이를 미아 방지용으로 마이크로칩을 삽입하는 것이 좋습니다.\n   - 주기적인 예방 접종과 건강 검진을 위한 수의사 방문을 정기적으로 계획하세요.\n\n### 행동 및 놀이\n4. **정기적인 놀이 시간**:\n   - 고양이와 놀이를 통해 상호작용하십시오. 장난감, 캐터닙, 레이저 포인터 등의 다양한 놀이를 활용해 고양이의 호기심을 자극하세요.\n   - 놀이는 고양이의 정신적, 신체적 건강을 유지하는 데 중요합니다.\n\n5. **스크래처 제공**:\n   - 고양이가 발톱을 갈고 몸을 스트레칭할 수 있는 스크래처를 제공하세요.\n\n### 건강 관리\n6. **정기적인 브러싱**:\n   - 장모종 고양이는 매일, 단모종 고양이는 주기적으로 브러싱을 해주세요. 털 엉킴 방지와 헤어볼 예방에 도움이 됩니다.\n\n7. **청결 유지**:\n   - 고양이 화장실을 정기적으로 청소하고, 깨끗하게 유지하세요. 하루에 한 번 이상 배변물을 제거하고, 주기적으로 화장실 전체를 청소하세요.\n\n### 사회화 및 훈련\n8. **사회화**:\n   - 사람과 다른 동물들과의 긍정적인 경험을 통해 고양이가 사회화될 수 있도록 도와주세요.\n\n9. **훈련**:\n   - 기본적인 규칙과 에티켓을 알려주기 위해 간단한 훈련을 시도하세요. 예를 들어, 긍정적 강화를 통해 원하는 행동을 유도할 수 있습니다.\n\n### 기타 고려 사항\n10. **사랑과 관심**:\n    - 고양이는 독립적이지만 사랑과 관심을 받는 것을 좋아합니다. 고양이와 자주 교감하고 시간을 보내세요.\n\n라벨이나 특정 종에 따라 다소 다를 수 있는 특수 요구 사항을 이해하는 것이 중요합니다. 수의사와의 상담을 통해 고양이의 필요를 보다 정확하게 파악하고 충족시키는 것이 좋습니다.'}, {'role': 'user', 'content': '개'}]
INFO:     127.0.0.1:48556 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-214742' coro=<<async_generator_athrow without __name__>()>>
[{'role': 'user', 'content': 'hello'}]
INFO:     127.0.0.1:33896 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I help you today?'}, {'role': 'user', 'content': 'my name is dongha'}]
INFO:     127.0.0.1:33904 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I help you today?'}, {'role': 'user', 'content': 'my name is dongha'}, {'role': 'assistant', 'content': 'Nice to meet you, Dongha! How can I assist you today?'}, {'role': 'user', 'content': 'do you remember my name?'}]
INFO:     127.0.0.1:45494 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I help you today?'}, {'role': 'user', 'content': 'my name is dongha'}, {'role': 'assistant', 'content': 'Nice to meet you, Dongha! How can I assist you today?'}, {'role': 'user', 'content': 'do you remember my name?'}, {'role': 'assistant', 'content': "I don't have the ability to remember information between interactions. But as long as we're in this conversation, I'll remember your name is Dongha. How can I help you today?"}, {'role': 'user', 'content': 'good'}]
INFO:     127.0.0.1:51184 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi my name is dongha'}]
INFO:     127.0.0.1:37710 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi my name is dongha'}, {'role': 'assistant', 'content': 'Hello, Dongha! How can I assist you today?'}, {'role': 'user', 'content': 'what is bit coin?'}]
INFO:     127.0.0.1:36056 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi my name is dongha'}, {'role': 'assistant', 'content': 'Hello, Dongha! How can I assist you today?'}, {'role': 'user', 'content': 'what is bit coin?'}, {'role': 'assistant', 'content': "Bitcoin is a type of digital or cryptocurrency that was invented in 2008 by an anonymous person or group of people using the name Satoshi Nakamoto. It started to be used as open-source software in 2009. Bitcoin is a decentralized currency, meaning it isn't controlled by any single institution like a government or bank.\n\nHere are some key points about Bitcoin:\n\n1. **Blockchain Technology**: Bitcoin transactions are recorded on a public ledger known as the blockchain. This technology ensures transparency and security as it makes it difficult to alter past transactions.\n\n2. **Decentralization**: Unlike traditional currencies issued by governments (fiat currencies), Bitcoin is decentralized. It relies on a global network of computers (miners) to validate and record transactions.\n\n3. **Limited Supply**: There will only ever be 21 million Bitcoins in existence. This cap is hardcoded into the protocol, making Bitcoin a deflationary asset over time.\n\n4. **Mining**: New Bitcoins are created through a process called mining, where powerful computers solve complex mathematical problems. Miners are rewarded with newly created Bitcoins and transaction fees.\n\n5. **Use Cases**: Bitcoin can be used for various purposes, including as an investment, for online purchases, and as a way to transfer money across borders quickly and with relatively low fees.\n\n6. **Wallets**: To store and manage Bitcoins, users need a digital wallet, which can be software-based or hardware-based. Wallets contain a public key (address) and a private key (for authorization of sending transactions).\n\n7. **Volatility**: Bitcoin's price is highly volatile and can fluctuate significantly over short periods. This can present both opportunities and risks for investors.\n\n8. **Anonymity and Pseudonymity**: While all transactions are public, the identities of the individuals behind the transactions are not necessarily known, placing Bitcoin in a category of pseudonymous currencies.\n\nDo you have any specific questions or aspects of Bitcoin you'd like to know more about?"}, {'role': 'user', 'content': 'do you know my name?'}]
INFO:     127.0.0.1:50418 - "POST /chat HTTP/1.1" 200 OK
INFO:     118.193.57.62:55254 - "GET / HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
[{'role': 'user', 'content': 'hi'}]
INFO:     127.0.0.1:39844 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}]
INFO:     127.0.0.1:42574 - "POST /chat HTTP/1.1" 200 OK
ERROR:    Exception in ASGI application
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/starlette/responses.py", line 265, in __call__
    await wrap(partial(self.listen_for_disconnect, receive))
  File "/home/dongha/openai/lib/python3.10/site-packages/starlette/responses.py", line 261, in wrap
    await func()
  File "/home/dongha/openai/lib/python3.10/site-packages/starlette/responses.py", line 238, in listen_for_disconnect
    message = await receive()
  File "/home/dongha/openai/lib/python3.10/site-packages/uvicorn/protocols/http/httptools_impl.py", line 553, in receive
    await self.message_event.wait()
  File "/usr/lib/python3.10/asyncio/locks.py", line 214, in wait
    await fut
asyncio.exceptions.CancelledError: Cancelled by cancel scope 7bd78b317cd0

During handling of the above exception, another exception occurred:

  + Exception Group Traceback (most recent call last):
  |   File "/home/dongha/openai/lib/python3.10/site-packages/uvicorn/protocols/http/httptools_impl.py", line 399, in run_asgi
  |     result = await app(  # type: ignore[func-returns-value]
  |   File "/home/dongha/openai/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py", line 70, in __call__
  |     return await self.app(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/fastapi/applications.py", line 1054, in __call__
  |     await super().__call__(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/applications.py", line 123, in __call__
  |     await self.middleware_stack(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/middleware/errors.py", line 186, in __call__
  |     raise exc
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/middleware/errors.py", line 164, in __call__
  |     await self.app(scope, receive, _send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/middleware/cors.py", line 85, in __call__
  |     await self.app(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/middleware/exceptions.py", line 65, in __call__
  |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/_exception_handler.py", line 64, in wrapped_app
  |     raise exc
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
  |     await app(scope, receive, sender)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/routing.py", line 756, in __call__
  |     await self.middleware_stack(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/routing.py", line 776, in app
  |     await route.handle(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/routing.py", line 297, in handle
  |     await self.app(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/routing.py", line 77, in app
  |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/_exception_handler.py", line 64, in wrapped_app
  |     raise exc
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/_exception_handler.py", line 53, in wrapped_app
  |     await app(scope, receive, sender)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/routing.py", line 75, in app
  |     await response(scope, receive, send)
  |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/responses.py", line 258, in __call__
  |     async with anyio.create_task_group() as task_group:
  |   File "/home/dongha/openai/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 680, in __aexit__
  |     raise BaseExceptionGroup(
  | exceptiongroup.ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)
  +-+---------------- 1 ----------------
    | Traceback (most recent call last):
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 69, in map_httpcore_exceptions
    |     yield
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 254, in __aiter__
    |     async for part in self._httpcore_stream:
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 367, in __aiter__
    |     raise exc from None
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 363, in __aiter__
    |     async for part in self._stream:
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/http11.py", line 349, in __aiter__
    |     raise exc
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/http11.py", line 341, in __aiter__
    |     async for chunk in self._connection._receive_response_body(**kwargs):
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/http11.py", line 210, in _receive_response_body
    |     event = await self._receive_event(timeout=timeout)
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/http11.py", line 224, in _receive_event
    |     data = await self._network_stream.read(
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 32, in read
    |     with map_exceptions(exc_map):
    |   File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    |     raise to_exc(exc) from exc
    | httpcore.ReadError
    | 
    | The above exception was the direct cause of the following exception:
    | 
    | Traceback (most recent call last):
    |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/responses.py", line 261, in wrap
    |     await func()
    |   File "/home/dongha/openai/lib/python3.10/site-packages/starlette/responses.py", line 250, in stream_response
    |     async for chunk in self.body_iterator:
    |   File "/home/dongha/langchain-prac/chat/chat_v1/chat_api.py", line 59, in stream_processor
    |     async for chunk in response:
    |   File "/home/dongha/openai/lib/python3.10/site-packages/openai/_streaming.py", line 147, in __aiter__
    |     async for item in self._iterator:
    |   File "/home/dongha/openai/lib/python3.10/site-packages/openai/_streaming.py", line 160, in __stream__
    |     async for sse in iterator:
    |   File "/home/dongha/openai/lib/python3.10/site-packages/openai/_streaming.py", line 151, in _iter_events
    |     async for sse in self._decoder.aiter_bytes(self.response.aiter_bytes()):
    |   File "/home/dongha/openai/lib/python3.10/site-packages/openai/_streaming.py", line 302, in aiter_bytes
    |     async for chunk in self._aiter_chunks(iterator):
    |   File "/home/dongha/openai/lib/python3.10/site-packages/openai/_streaming.py", line 313, in _aiter_chunks
    |     async for chunk in iterator:
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_models.py", line 929, in aiter_bytes
    |     async for raw_bytes in self.aiter_raw():
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_models.py", line 987, in aiter_raw
    |     async for raw_stream_bytes in self.stream:
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 149, in __aiter__
    |     async for chunk in self._stream:
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 253, in __aiter__
    |     with map_httpcore_exceptions():
    |   File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    |     self.gen.throw(typ, value, traceback)
    |   File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 86, in map_httpcore_exceptions
    |     raise mapped_exc(message) from exc
    | httpx.ReadError
    +------------------------------------
2024-07-11 09:59:10.387 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 69, in map_httpcore_exceptions
    yield
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 254, in __aiter__
    async for part in self._httpcore_stream:
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 367, in __aiter__
    raise exc from None
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 363, in __aiter__
    async for part in self._stream:
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/http11.py", line 349, in __aiter__
    raise exc
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/http11.py", line 341, in __aiter__
    async for chunk in self._connection._receive_response_body(**kwargs):
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/http11.py", line 210, in _receive_response_body
    event = await self._receive_event(timeout=timeout)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/http11.py", line 220, in _receive_event
    with map_exceptions({h11.RemoteProtocolError: RemoteProtocolError}):
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.RemoteProtocolError: peer closed connection without sending complete message body (incomplete chunked read)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 94, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 91, in chat_main
    loop.run_until_complete(handle_chat(message))  # handle_chat 함수를 실행하여 사용자의 메시지를 처리
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 77, in handle_chat
    async for chunk in request_chat_api(st.session_state.messages, st.session_state.model):
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 15, in request_chat_api
    async for chunk in response.aiter_text():
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_models.py", line 950, in aiter_text
    async for byte_content in self.aiter_bytes():
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_models.py", line 929, in aiter_bytes
    async for raw_bytes in self.aiter_raw():
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_models.py", line 987, in aiter_raw
    async for raw_stream_bytes in self.stream:
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 149, in __aiter__
    async for chunk in self._stream:
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 253, in __aiter__
    with map_httpcore_exceptions():
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 86, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.RemoteProtocolError: peer closed connection without sending complete message body (incomplete chunked read)
[{'role': 'user', 'content': 'hello'}]
INFO:     127.0.0.1:46352 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': '다음 문장 영어로 번역해줘'}]
INFO:     127.0.0.1:59574 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': '다음 문장 영어로 번역해줘'}, {'role': 'assistant', 'content': '물론이죠! 번역할 문장을 입력해 주시면 제가 도와드릴게요.'}, {'role': 'user', 'content': '"아프리카 코끼리는 무서워"'}]
INFO:     127.0.0.1:43484 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi'}]
INFO:     127.0.0.1:37626 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hello'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': '다음 문장 영어로 번역해줘'}, {'role': 'assistant', 'content': '물론이죠! 번역할 문장을 입력해 주시면 제가 도와드릴게요.'}, {'role': 'user', 'content': '"아프리카 코끼리는 무서워"'}, {'role': 'assistant', 'content': '"African elephants are scary."'}, {'role': 'user', 'content': '"북극곰도 무서워"'}]
INFO:     127.0.0.1:33140 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'ㅗ디ㅣㅐ'}]
INFO:     127.0.0.1:60336 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi'}]
INFO:     127.0.0.1:35714 - "POST /chat HTTP/1.1" 200 OK
INFO:     202.107.226.2:53273 - "GET / HTTP/1.0" 404 Not Found
INFO:     115.238.44.234:56462 - "GET / HTTP/1.0" 404 Not Found
[{'role': 'user', 'content': 'hi'}]
INFO:     127.0.0.1:37220 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'what is the weather today?'}]
INFO:     127.0.0.1:49128 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'what is the weather today?'}, {'role': 'assistant', 'content': "I'm currently unable to provide real-time data such as weather updates. However, you can easily check the weather by using a weather app on your phone, visiting a weather website like Weather.com, or simply asking a voice assistant like Siri or Google Assistant."}, {'role': 'user', 'content': '오늘 날씨는 어때?'}]
INFO:     127.0.0.1:50218 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'hi'}, {'role': 'assistant', 'content': 'Hello! How can I assist you today?'}, {'role': 'user', 'content': 'what is the weather today?'}, {'role': 'assistant', 'content': "I'm currently unable to provide real-time data such as weather updates. However, you can easily check the weather by using a weather app on your phone, visiting a weather website like Weather.com, or simply asking a voice assistant like Siri or Google Assistant."}, {'role': 'user', 'content': '오늘 날씨는 어때?'}, {'role': 'assistant', 'content': '실시간 날씨 정보를 제공해드릴 수는 없지만, 스마트폰의 날씨 앱을 이용하거나, 네이버 날씨, 다음 날씨와 같은 웹사이트를 방문해서 확인해보세요. 또한, "Siri" 또는 "Google Assistant"와 같은 음성 비서를 통해서도 오늘 날씨를 쉽게 확인하실 수 있습니다.'}, {'role': 'user', 'content': '오늘 삼성 주가는 어때?'}]
INFO:     127.0.0.1:42526 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': "Hello, what's your name"}]
INFO:     127.0.0.1:59216 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': "Hello, what's your name"}, {'role': 'assistant', 'content': "Hello! I'm an AI language model created by OpenAI, and I don't have a personal name. How can I assist you today?"}, {'role': 'user', 'content': 'name yourself first please'}]
INFO:     127.0.0.1:43812 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': "Hello, what's your name"}, {'role': 'assistant', 'content': "Hello! I'm an AI language model created by OpenAI, and I don't have a personal name. How can I assist you today?"}, {'role': 'user', 'content': 'name yourself first please'}, {'role': 'assistant', 'content': 'Sure, you can call me Assistant. How can I help you today?'}, {'role': 'user', 'content': "that's too long, shorter version please"}]
INFO:     127.0.0.1:56612 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': "Hello, what's your name"}, {'role': 'assistant', 'content': "Hello! I'm an AI language model created by OpenAI, and I don't have a personal name. How can I assist you today?"}, {'role': 'user', 'content': 'name yourself first please'}, {'role': 'assistant', 'content': 'Sure, you can call me Assistant. How can I help you today?'}, {'role': 'user', 'content': "that's too long, shorter version please"}, {'role': 'assistant', 'content': 'You can call me "AI." How\'s that?'}, {'role': 'user', 'content': 'what are the differences between gpt-4o and gpt-4?'}]
INFO:     127.0.0.1:48890 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': "Hello, what's your name"}, {'role': 'assistant', 'content': "Hello! I'm an AI language model created by OpenAI, and I don't have a personal name. How can I assist you today?"}, {'role': 'user', 'content': 'name yourself first please'}, {'role': 'assistant', 'content': 'Sure, you can call me Assistant. How can I help you today?'}, {'role': 'user', 'content': "that's too long, shorter version please"}, {'role': 'assistant', 'content': 'You can call me "AI." How\'s that?'}, {'role': 'user', 'content': 'what are the differences between gpt-4o and gpt-4?'}, {'role': 'assistant', 'content': 'As of my last update, there is no official model known as "GPT-4o" from OpenAI. It’s possible that "GPT-4o" is either a typographical error or a hypothetical or unofficial version of GPT-4.\n\nThat being said, GPT-4 is the fourth generation of OpenAI\'s Generative Pre-trained Transformer models, known for significant improvements in understanding and generating human-like text compared to its predecessors.\n\nIf there’s a new model that has been released or announced after my last update, I wouldn\'t have the specific details about it. For the most accurate and up-to-date information, you may want to check OpenAI\'s official announcements or their latest publications.'}, {'role': 'user', 'content': 'can you create an image'}]
INFO:     127.0.0.1:32790 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
[{'role': 'user', 'content': 'can you create an image'}]
INFO:     127.0.0.1:46530 - "POST /chat HTTP/1.1" 200 OK
[{'role': 'user', 'content': 'can you create an image'}, {'role': 'assistant', 'content': "I can't create or display images directly, but I can certainly help guide you on how to create one using various tools or programming languages. If you let me know what kind of image you're interested in, I can provide detailed instructions or code snippets for generating it! For example, I can provide you with a Python script using libraries like Pillow or Matplotlib to create an image."}, {'role': 'user', 'content': 'can you create an image\n\n'}]
INFO:     127.0.0.1:52420 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-231617' coro=<<async_generator_athrow without __name__>()>>
