INFO:     Started server process [157806]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)

Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.


  You can now view your Streamlit app in your browser.

  Local URL: http://localhost:8501
  Network URL: http://103.57.61.86:8501
  External URL: http://103.57.61.86:8501

hi?
INFO:     127.0.0.1:45390 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     106.75.11.194:45780 - "GET / HTTP/1.1" 404 Not Found
INFO:     106.75.168.236:39200 - "GET / HTTP/1.1" 404 Not Found
INFO:     106.75.168.236:39206 - "GET /favicon.ico HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
몽고 DB에서 mallName은 "쿠팡"인 documents들의 productId를 추출하는 파이썬 코드
INFO:     127.0.0.1:57316 - "POST /chat HTTP/1.1" 200 OK
몽고DB에서 mallUrl만 추출하는 query
INFO:     127.0.0.1:46226 - "POST /chat HTTP/1.1" 200 OK
dall-e api와 streamlit을 활용해서 프롬프트를 입력받아 생성된 이미지를 보여주는 파이썬 코드
INFO:     127.0.0.1:52222 - "POST /chat HTTP/1.1" 200 OK
다음 문장 영어로 번역해줘

"상상하는 뭐든지 이뤄질거야"
INFO:     127.0.0.1:58572 - "POST /chat HTTP/1.1" 200 OK
INFO:     52.76.71.100:4601 - "GET /favicon.ico HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     123.254.109.180:52024 - "GET / HTTP/1.1" 404 Not Found
INFO:     123.254.109.180:52608 - "GET /favicon.ico HTTP/1.1" 404 Not Found
INFO:     123.254.109.180:52644 - "GET /robots.txt HTTP/1.1" 404 Not Found
INFO:     123.254.109.180:52682 - "GET /sitemap.xml HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:31407 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.203.84:8779 - "GET /odinhttpcall1720061481 HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:16203 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.203.84:9677 - "POST /sdk HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:7329 - "GET /HNAP1 HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:21765 - "GET /evox/about HTTP/1.1" 404 Not Found
INFO:     172.232.203.84:14821 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.203.84:9105 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.203.52:45236 - "GET /query?q=SHOW+DIAGNOSTICS HTTP/1.1" 404 Not Found
INFO:     172.232.203.52:45220 - "GET /solr/admin/info/system HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.195.6:2242 - "GET /cgi-bin/authLogin.cgi HTTP/1.1" 404 Not Found
INFO:     172.232.195.11:51424 - "GET /v2/_catalog HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     172.232.203.52:45250 - "GET /solr/admin/cores?action=STATUS&wt=json HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.203.47:19792 - "GET / HTTP/1.1" 404 Not Found
INFO:     52.76.71.100:41224 - "GET /favicon.ico HTTP/1.1" 404 Not Found
hi
INFO:     127.0.0.1:39700 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
아아아아아아악
INFO:     127.0.0.1:47188 - "POST /chat HTTP/1.1" 200 OK
살려줘~~
INFO:     127.0.0.1:34870 - "POST /chat HTTP/1.1" 200 OK
...
INFO:     127.0.0.1:40202 - "POST /chat HTTP/1.1" 200 OK
살려줘~~~
INFO:     127.0.0.1:46552 - "POST /chat HTTP/1.1" 200 OK
...
INFO:     127.0.0.1:43408 - "POST /chat HTTP/1.1" 200 OK
엑셀 필터푸는 단축키가 머더러..
INFO:     127.0.0.1:44938 - "POST /chat HTTP/1.1" 200 OK
이 나이에 벌써 눈이 침침합니다
INFO:     127.0.0.1:39172 - "POST /chat HTTP/1.1" 200 OK
엑셀 필터푸는 단축키가 머더러..
INFO:     127.0.0.1:38284 - "POST /chat HTTP/1.1" 200 OK
이 나이에 벌써 눈이 침침합니다
INFO:     127.0.0.1:51562 - "POST /chat HTTP/1.1" 200 OK
ㅠㅠ
INFO:     127.0.0.1:52824 - "POST /chat HTTP/1.1" 200 OK
나이!
INFO:     127.0.0.1:52816 - "POST /chat HTTP/1.1" 200 OK
나이와 함께! 
INFO:     127.0.0.1:52806 - "POST /chat HTTP/1.1" 200 OK
T-T
INFO:     127.0.0.1:37634 - "POST /chat HTTP/1.1" 200 OK
OTL
INFO:     127.0.0.1:52088 - "POST /chat HTTP/1.1" 200 OK
다음 문장 영어로 번역해줘

"여름 방학을 즐기는 용왕님이 있고 옆에서 시중을 드는 멍게가 있다.
용왕님은 선글라스를 끼고 바닷속에 스며드는 햇빛을 즐기고 있고, 멍게는 옆에서 커피 만들고 있다.
용왕님이 오랜만에 즐기는 여유는 다른 바다 생명들의 활기를 채워준다.
일러스트 화풍으로 이미지 만들어줘."
INFO:     127.0.0.1:57392 - "POST /chat HTTP/1.1" 200 OK
please elaborate on the quote above ~
INFO:     127.0.0.1:35850 - "POST /chat HTTP/1.1" 200 OK
i thought you'd be able to see the above quote .. ^^ 
INFO:     127.0.0.1:46832 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
INFO:     173.230.129.30:35342 - "GET / HTTP/1.0" 404 Not Found
INFO:     104.237.130.137:56160 - "GET / HTTP/1.1" 404 Not Found
hi
INFO:     127.0.0.1:34446 - "POST /chat HTTP/1.1" 200 OK
who are you?
INFO:     127.0.0.1:40968 - "POST /chat HTTP/1.1" 200 OK
what is your best function?
INFO:     127.0.0.1:47388 - "POST /chat HTTP/1.1" 200 OK
INFO:     172.232.209.164:32229 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.209.164:21853 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.209.164:26807 - "POST /sdk HTTP/1.1" 404 Not Found
INFO:     172.232.209.164:20509 - "GET /odinhttpcall1720409618 HTTP/1.1" 404 Not Found
INFO:     172.232.209.164:31343 - "GET /HNAP1 HTTP/1.1" 404 Not Found
INFO:     172.232.209.164:8639 - "GET /evox/about HTTP/1.1" 404 Not Found
INFO:     172.232.209.164:29641 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.209.164:10697 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.194.29:58700 - "GET /solr/admin/info/system HTTP/1.1" 404 Not Found
INFO:     172.232.206.132:11320 - "GET /v2/_catalog HTTP/1.1" 404 Not Found
INFO:     172.232.206.34:43508 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.206.237:50428 - "GET /cgi-bin/authLogin.cgi HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     172.232.194.228:29876 - "GET /query?q=SHOW+DIAGNOSTICS HTTP/1.1" 404 Not Found
INFO:     52.76.71.100:12918 - "GET /favicon.ico HTTP/1.1" 404 Not Found
INFO:     172.232.194.29:58710 - "GET /solr/admin/cores?action=STATUS&wt=json HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     172.232.194.196:8175 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.196:19207 - "POST /sdk HTTP/1.1" 404 Not Found
INFO:     172.232.194.196:20361 - "GET /odinhttpcall1720410781 HTTP/1.1" 404 Not Found
INFO:     172.232.194.196:25119 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.196:26129 - "GET /HNAP1 HTTP/1.1" 404 Not Found
INFO:     172.232.194.196:6529 - "GET /evox/about HTTP/1.1" 404 Not Found
INFO:     172.232.194.196:20095 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.196:7785 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.194.228:10996 - "GET /solr/admin/info/system HTTP/1.1" 404 Not Found
INFO:     172.232.206.132:27600 - "GET /query?q=SHOW+DIAGNOSTICS HTTP/1.1" 404 Not Found
INFO:     172.232.194.134:9142 - "GET /cgi-bin/authLogin.cgi HTTP/1.1" 404 Not Found
INFO:     172.232.194.100:29328 - "GET /v2/_catalog HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.206.132:27588 - "GET / HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     52.76.71.100:19363 - "GET /favicon.ico HTTP/1.1" 404 Not Found
INFO:     172.232.194.228:7678 - "GET /solr/admin/cores?action=STATUS&wt=json HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
WARNING:  Invalid HTTP request received.
INFO:     172.232.194.146:4173 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.146:1499 - "GET /odinhttpcall1720410959 HTTP/1.1" 404 Not Found
INFO:     172.232.194.146:2669 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.146:22167 - "POST /sdk HTTP/1.1" 404 Not Found
INFO:     172.232.194.146:12921 - "GET /evox/about HTTP/1.1" 404 Not Found
INFO:     172.232.194.146:24817 - "GET /HNAP1 HTTP/1.1" 404 Not Found
INFO:     172.232.194.146:12629 - "GET / HTTP/1.0" 404 Not Found
INFO:     172.232.194.146:13537 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.220.233:18682 - "GET /query?q=SHOW+DIAGNOSTICS HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.192.131:63880 - "GET / HTTP/1.1" 404 Not Found
INFO:     172.232.220.233:18694 - "GET /solr/admin/info/system HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.194.28:60320 - "GET /v2/_catalog HTTP/1.1" 404 Not Found
INFO:     172.232.194.100:33030 - "GET /cgi-bin/authLogin.cgi HTTP/1.1" 404 Not Found
INFO:     52.76.71.100:61453 - "GET /favicon.ico HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
INFO:     172.232.220.233:18706 - "GET /solr/admin/cores?action=STATUS&wt=json HTTP/1.1" 404 Not Found
WARNING:  Invalid HTTP request received.
what is your favorite food?
INFO:     127.0.0.1:42128 - "POST /chat HTTP/1.1" 200 OK
hello
INFO:     127.0.0.1:47064 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
오늘 삼성 주식 가격 알려줘
INFO:     127.0.0.1:58588 - "POST /chat HTTP/1.1" 200 OK
인터넷 서핑 기능은 없니?
INFO:     127.0.0.1:36572 - "POST /chat HTTP/1.1" 200 OK
hi
INFO:     127.0.0.1:41208 - "POST /chat HTTP/1.1" 200 OK
what is your name?
INFO:     127.0.0.1:60522 - "POST /chat HTTP/1.1" 200 OK
show me the purpose of you
INFO:     127.0.0.1:54488 - "POST /chat HTTP/1.1" 200 OK
hi
INFO:     127.0.0.1:60098 - "POST /chat HTTP/1.1" 200 OK
2024-07-09 11:00:38.741 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connection.py", line 196, in _new_conn
    sock = connection.create_connection(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/util/connection.py", line 85, in create_connection
    raise err
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/util/connection.py", line 73, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connectionpool.py", line 789, in urlopen
    response = self._make_request(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connectionpool.py", line 495, in _make_request
    conn.request(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connection.py", line 398, in request
    self.endheaders()
  File "/usr/lib/python3.10/http/client.py", line 1278, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/usr/lib/python3.10/http/client.py", line 1038, in _send_output
    self.send(msg)
  File "/usr/lib/python3.10/http/client.py", line 976, in send
    self.connect()
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connection.py", line 236, in connect
    self.sock = self._new_conn()
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connection.py", line 211, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7b388c7ff7f0>: Failed to establish a new connection: [Errno 111] Connection refused

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/adapters.py", line 667, in send
    resp = conn.urlopen(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/connectionpool.py", line 843, in urlopen
    retries = retries.increment(
  File "/home/dongha/openai/lib/python3.10/site-packages/urllib3/util/retry.py", line 519, in increment
    raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=123): Max retries exceeded with url: /chat (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7b388c7ff7f0>: Failed to establish a new connection: [Errno 111] Connection refused'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 101, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 79, in chat_main
    assistant_response = request_chat_api(message)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 23, in request_chat_api
    resp = requests.post(
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/adapters.py", line 700, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=123): Max retries exceeded with url: /chat (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7b388c7ff7f0>: Failed to establish a new connection: [Errno 111] Connection refused'))
2024-07-09 11:01:59.393 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 101, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 79, in chat_main
    assistant_response = request_chat_api(message)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 30, in request_chat_api
    resp = resp.json()
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2024-07-09 11:02:25.559 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 101, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 79, in chat_main
    assistant_response = request_chat_api(message)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 30, in request_chat_api
    resp = resp.json()
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2024-07-09 11:10:13.727 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 974, in json
    return complexjson.loads(self.text, **kwargs)
  File "/usr/lib/python3.10/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.10/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.10/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 101, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 79, in chat_main
    assistant_response = request_chat_api(message)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 30, in request_chat_api
    resp = resp.json()
  File "/home/dongha/openai/lib/python3.10/site-packages/requests/models.py", line 978, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
2024-07-09 13:13:07.567 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in <module>
    chat_main()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 58, in chat_main
    asyncio.create_task(handle_chat(message))
  File "/usr/lib/python3.10/asyncio/tasks.py", line 336, in create_task
    loop = events.get_running_loop()
RuntimeError: no running event loop
/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py:683: RuntimeWarning: coroutine 'handle_chat' was never awaited
  gc.collect(2)
RuntimeWarning: Enable tracemalloc to get the object allocation traceback
2024-07-09 13:29:58.762 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:30:10.176 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:30:16.765 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:30:55.828 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:33:11.380 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:34:38.409 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:34:52.174 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:35:22.582 Invalid arguments were passed to "st.write" function. Support for passing such unknown keywords arguments will be dropped in future. Invalid arguments were: {'devider': 'orange'}
2024-07-09 13:37:07.538 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 53, in chat_main
    init_session_state()  # 세션 상태를 초기화
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 24, in init_session_state
    st.divider("orange")  # 긍정적인 인용구를 출력
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/metrics_util.py", line 408, in wrapped_func
    result = non_optional_func(*args, **kwargs)
TypeError: MarkdownMixin.divider() takes 1 positional argument but 2 were given
hi?
<Response [200]>
몽고 DB에서 mallName은 "쿠팡"인 documents들의 productId를 추출하는 파이썬 코드
<Response [200]>
몽고DB에서 mallUrl만 추출하는 query
<Response [200]>
dall-e api와 streamlit을 활용해서 프롬프트를 입력받아 생성된 이미지를 보여주는 파이썬 코드
<Response [200]>
다음 문장 영어로 번역해줘

"상상하는 뭐든지 이뤄질거야"
<Response [200]>
hi
<Response [200]>
아아아아아아악
<Response [200]>
살려줘~~
<Response [200]>
...
<Response [200]>
살려줘~~~
<Response [200]>
...
<Response [200]>
엑셀 필터푸는 단축키가 머더러..
이 나이에 벌써 눈이 침침합니다
<Response [200]>
<Response [200]>
엑셀 필터푸는 단축키가 머더러..
<Response [200]>
이 나이에 벌써 눈이 침침합니다
<Response [200]>
나이와 함께! 
나이!
ㅠㅠ
<Response [200]>
<Response [200]>
<Response [200]>
T-T
<Response [200]>
OTL
<Response [200]>
다음 문장 영어로 번역해줘

"여름 방학을 즐기는 용왕님이 있고 옆에서 시중을 드는 멍게가 있다.
용왕님은 선글라스를 끼고 바닷속에 스며드는 햇빛을 즐기고 있고, 멍게는 옆에서 커피 만들고 있다.
용왕님이 오랜만에 즐기는 여유는 다른 바다 생명들의 활기를 채워준다.
일러스트 화풍으로 이미지 만들어줘."
<Response [200]>
please elaborate on the quote above ~
<Response [200]>
i thought you'd be able to see the above quote .. ^^ 
<Response [200]>
hi
<Response [200]>
who are you?
<Response [200]>
what is your best function?
<Response [200]>
what is your favorite food?
<Response [200]>
hello
<Response [200]>
오늘 삼성 주식 가격 알려줘
<Response [200]>
인터넷 서핑 기능은 없니?
<Response [200]>
hi
<Response [200]>
what is your name?
<Response [200]>
show me the purpose of you
<Response [200]>
hi
<Response [200]>
hi
hi
<Response [500]>
hi
<Response [500]>
hi
<Response [200]>
hi
hi
what is your name?
what is the topic of movie, god father
you're so amazing
what about god father's real name?
오늘 투자하기 좋은 종목이 어떤게 있을까?
내 이름은 김동하야
내 이름이 뭐라고?
위 채팅 기록을 지워줘
hello, if you don't mind could you introduce yourself?
you're so kind, aren't you?
다음 코드에 주석을 달아줄 수 있어?

import streamlit as st
import asyncio
import httpx

API_BASE_URL = "http://localhost:123/chat"

async def request_chat_api(message: str):
    async with httpx.AsyncClient() as client:
        async with client.stream("POST", API_BASE_URL, json={"message": message}, timeout=None) as response:
            async for chunk in response.aiter_text():
                yield chunk

def get_prompt_parsing_assistant():
    return "You are an assistant who helps people live their lives more energetically."

def init_session_state():
    st.title("Simple chat with GPT 4.0")
    st.write("For assistant manager")
    st.write("Let your smile change the world, but don't let the world change your smile. This quote can bring positivity and joy to someone's day.")

    # Initialize chat history
    if "messages" not in st.session_state:
        st.session_state.messages = []

    # Display chat messages from history on app rerun
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])

async def handle_chat(message: str):
    st.session_state.messages.append({"role": "user", "content": message})
    with st.chat_message("user"):
        st.markdown(message)
    print(message)

    full_response = ""
    message_placeholder = st.empty()
    async for chunk in request_chat_api(message):
        full_response += chunk
        message_placeholder.markdown(full_response)
        await asyncio.sleep(0.05)

    st.session_state.messages.append({"role": "assistant", "content": full_response})

def chat_main():
    init_session_state()
    
    if message := st.chat_input(""):
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        loop.run_until_complete(handle_chat(message))

if __name__ == "__main__":
    chat_main()
hi
내 기분이 어떻게 하면 좋아질까?
hi
what is current big issue?
hello
다음 코드에 주석 달아줘

import os

from openai import AzureOpenAI, AsyncAzureOpenAI
from fastapi import FastAPI
from fastapi.responses import StreamingResponse
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel


api_version = "2024-02-01"
azure_endpoint = "https://hatcheryopenaicanadaeast.openai.azure.com/"
api_key = "14a3d1c6a6094c6a8950c1f1ddad33a6"
model = "hatcheryOpenaiCanadaGPT4o"

client = AsyncAzureOpenAI(
    api_version=api_version,
    azure_endpoint=azure_endpoint,
    api_key = api_key)


app = FastAPI(debug = True)
app.add_middleware(
    CORSMiddleware,
    allow_origins = ["*"],
    allow_credentials = True,
    allow_methods = ["*"],
    allow_headers = ["*"]
)


class ChatRequest(BaseModel):
    message: str


def get_prompt_parsing_assistant():
    return "You are an assistant who explains everything that people are curious about as specifically as possible."

async def stream_processor(response):
    async for chunk in response:
        if len(chunk.choices) > 0:
            delta = chunk.choices[0].delta
            if delta.content:
                yield delta.content


@app.post("/chat")
async def chat(req: ChatRequest):
    res = await client.chat.completions.create(
        model = model,
        messages = [
            {"role": "system", "content": get_prompt_parsing_assistant()},
            {"role": "user", "content": req.message}
        ],
        stream = True
    )

    print(req.message)
    #res_ = res.choices[0].message.model_dump()["content"]

    return StreamingResponse(stream_processor(res), media_type='text/event-stream')


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host = "0.0.0.0", port = 123)
코드에 주석 달아줘

@app.post("/chat")
async def chat(req: ChatRequest):
    res = await client.chat.completions.create(
        model = model,
        messages = [
            {"role": "system", "content": get_prompt_parsing_assistant()},
            {"role": "user", "content": req.message}
        ],
        stream = True
    )

    print(req.message)
    #res_ = res.choices[0].message.model_dump()["content"]

    return StreamingResponse(stream_processor(res), media_type='text/event-stream')


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host = "0.0.0.0", port = 123)

Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.


  You can now view your Streamlit app in your browser.

  Local URL: http://localhost:8501
  Network URL: http://103.57.61.86:8501
  External URL: http://103.57.61.86:8501

INFO:     Started server process [3006179]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)
hi
INFO:     127.0.0.1:53010 - "POST /chat HTTP/1.1" 200 OK
what is your job?
INFO:     127.0.0.1:53576 - "POST /chat HTTP/1.1" 200 OK
최근 대한민국 출생율 정보 알려줘
INFO:     127.0.0.1:37038 - "POST /chat HTTP/1.1" 200 OK
몽고 DB에서 원하는 다큐먼트를 삭제하는 파이썬 코드 알려줘
INFO:     127.0.0.1:56802 - "POST /chat HTTP/1.1" 200 OK
알겠어
INFO:     127.0.0.1:60134 - "POST /chat HTTP/1.1" 200 OK
Hi paid GPT
INFO:     127.0.0.1:37104 - "POST /chat HTTP/1.1" 200 OK
oh are you? I thought you were GPT-4o
INFO:     127.0.0.1:39588 - "POST /chat HTTP/1.1" 200 OK
which version?
INFO:     127.0.0.1:51206 - "POST /chat HTTP/1.1" 200 OK
I guess OpenAI provides several versions of Chat GPT like GPT3.5, GPT4o or so
INFO:     127.0.0.1:59960 - "POST /chat HTTP/1.1" 200 OK
so which version are you
INFO:     127.0.0.1:43484 - "POST /chat HTTP/1.1" 200 OK
that's paid one isnt it
INFO:     127.0.0.1:36994 - "POST /chat HTTP/1.1" 200 OK
GPT-4.0 는 유료버전 아니니
INFO:     127.0.0.1:46296 - "POST /chat HTTP/1.1" 200 OK
but your previously told me that you are a free version of OpenAI's Chat GPT
INFO:     127.0.0.1:39560 - "POST /chat HTTP/1.1" 200 OK
유료버전이라묘요
INFO:     127.0.0.1:42232 - "POST /chat HTTP/1.1" 200 OK
아니 챗지피티 4.0 유료버전 아닙니까
INFO:     127.0.0.1:39156 - "POST /chat HTTP/1.1" 200 OK
너 4.0 아니니
INFO:     127.0.0.1:44692 - "POST /chat HTTP/1.1" 200 OK
너는 gpt 버전이 뭐니?
INFO:     127.0.0.1:44696 - "POST /chat HTTP/1.1" 200 OK
너는 유료버전이니?
INFO:     127.0.0.1:44252 - "POST /chat HTTP/1.1" 200 OK
너는 GPT 버전이 뭐니?
INFO:     127.0.0.1:47402 - "POST /chat HTTP/1.1" 200 OK
hi
INFO:     127.0.0.1:34884 - "POST /chat HTTP/1.1" 200 OK
아래 코드 설명해줘

from datetime import timedelta
import pendulum
local_tz = pendulum.timezone("Asia/Seoul")

from glob import glob
import warnings
warnings.filterwarnings('ignore')

from airflow.models import DAG
from airflow.utils.dates import days_ago
from airflow.operators.python import PythonOperator, PythonVirtualenvOperator
from airflow.operators.dummy import DummyOperator
from airflow.decorators import task

import sys
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model")

sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model")
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/model")
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/utils")

import smtplib
from email.mime.text import MIMEText
from datetime import date, datetime, timezone, timedelta

#from shop_model.shop_model_test import model_test

from hatchery_extract_model.model import *
from hatchery_extract_model.utils import *
from hatchery_extract_model.extract_info_main import *


## function 01 ##
### Price Extract ###
def coupang_info():
    # url 정보 가져오기
    with open('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/utils/mongo.yaml') as f:
        config = yaml.safe_load(f)

    mongo_uri = config["config"]["mongo_uri"]

    coupang_docs = get_data_mallname(mongo_uri, "쿠팡")
    prices_id, mall_url, pre_price = get_url_info(coupang_docs)


    # 정보 추출
    ## coupang번가 가격 정보 추출
    price_result, fee_result = price_extract(mall_url, "coupang", 35)


    # collection 가져오기
    products_collection, prices_collection, categories_collection = get_collection(mongo_uri)

    price_range_data_01 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba01_new_list.xlsx')
    price_range_data_02 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba02_new_list.xlsx')
    price_range_data_03 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba03_new_list.xlsx')
    price_range_data_04 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba04_new_list.xlsx')
    price_range_data_05 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba05_new_list.xlsx')
    price_range_data_tmp = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/tmp_new_list.xlsx')
    price_range_data_keyboard = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/keyboard_new_list.xlsx')

    price_range_data = pd.concat([price_range_data_01,
                                  price_range_data_02,
                                  price_range_data_03,
                                  price_range_data_04,
                                  price_range_data_05,
                                  price_range_data_tmp,
                                  price_range_data_keyboard], axis = 0).reset_index(drop = True)

    # 쿠팡 price 전처리
    price = []
    for i in range(len(price_result)):
        query = {"_id": prices_id[i]}
        product_id = prices_collection.find_one(query)['productId']

        query = {"_id" : product_id}
        thumbnail_url = products_collection.find_one(query)['thumbnail']

        low_price = price_range_data[price_range_data['image_url'] == thumbnail_url].price_low.values[0]
        high_price = price_range_data[price_range_data['image_url'] == thumbnail_url].price_high.values[0]

        try:
            if (price_result[i] >= low_price) and (price_result[i] <= high_price):
                price.append(price_result[i] + fee_result[i])
            else:   
                price.append(pre_price[i])
        except:
            price.append(pre_price[i])

    # 몽고DB에 가격정보 삽입
    insert_price_info(prices_collection, price, prices_id)


def coupang_batch_alarm():
    exp_day = str(date.today())

    KST = timezone(timedelta(hours=9))
    time_record = datetime.now(KST)
    _day = str(time_record)[:10]
    _time = str(time_record.time())[:8]

    smtp = smtplib.SMTP('smtp.gmail.com', 587)
    smtp.ehlo()      # say Hello
    smtp.starttls()  # TLS 사용시 필요
    smtp.login('dhkim@hatchery.kr', 'jysnmejkxylqzpcm')

    msg = "쿠팡 배치가 완료 되었습니다."

    msg = MIMEText(msg)
    msg['Subject'] = f'{_time} 쿠팡 배치 완료!'
    msg['To'] = 'dhkim@hatchery.kr'
    smtp.sendmail('dhkim@hatchery.kr', 'dhkim@hatchery.kr', msg.as_string())
    smtp.sendmail('dhkim@hatchery.kr', 'kwon.dogeun@hatchery.kr', msg.as_string())

    smtp.quit()


## connect function ##
args = {'owner': 'dongha',
        'start_date': days_ago(n=1),
        'tzinfo' : local_tz}

with DAG(dag_id = 'coupang_info',
          default_args = args,
          schedule_interval = timedelta(minutes=30)) as dag:

    start = DummyOperator(task_id = 'dummy_start', dag = dag)
    end = DummyOperator(task_id = 'dummy_end', dag = dag)

    t1 = PythonOperator(task_id = 'coupang_info',
                        provide_context = True,
                        python_callable = coupang_info,
                        dag = dag)

    t2 = PythonOperator(task_id = 'coupang_batch_alarm',
                        provide_context = True,
                        python_callable = coupang_batch_alarm,
                        dag = dag)

    start >> t1 >> t2 >> end
INFO:     127.0.0.1:57170 - "POST /chat HTTP/1.1" 200 OK
how frequent should a regular person go out for running to optimize one's brain efficiency 
INFO:     127.0.0.1:42530 - "POST /chat HTTP/1.1" 200 OK
how does 3km at paced 6 sound like
INFO:     127.0.0.1:44916 - "POST /chat HTTP/1.1" 200 OK
6 wasn
INFO:     127.0.0.1:43368 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-24924' coro=<<async_generator_athrow without __name__>()>>
3km for about 25 min
INFO:     127.0.0.1:56538 - "POST /chat HTTP/1.1" 200 OK
how frequent should a regular person go out for running to optimize one's brain efficiency
INFO:     127.0.0.1:52470 - "POST /chat HTTP/1.1" 200 OK
i wasn't walking.. it was a running pace
INFO:     127.0.0.1:45780 - "POST /chat HTTP/1.1" 200 OK
how does 3km at paced 6 sound like
INFO:     127.0.0.1:55588 - "POST /chat HTTP/1.1" 200 OK
몽고 DB에서 리스트 값을 갖는 logs의 createdAt가 6월 18일 이전의 것들인 항목을 삭제하는 파이썬 코드
INFO:     127.0.0.1:52290 - "POST /chat HTTP/1.1" 200 OK
how about 3km for 17 min
INFO:     127.0.0.1:41742 - "POST /chat HTTP/1.1" 200 OK
how long should i take a break after having supper for running as above
INFO:     127.0.0.1:34408 - "POST /chat HTTP/1.1" 200 OK
how about right after running? how long should I take a break to have a supper after running as bove
INFO:     127.0.0.1:55610 - "POST /chat HTTP/1.1" 200 OK
빠르게
INFO:     127.0.0.1:60584 - "POST /chat HTTP/1.1" 200 OK
한국에서 외감대상인 비상장 중소기업이 비외감 대상인 자회사 또는 해외 법인이 있을 때, 연결재무제표 공시를 하지 않아도 된다고 알고있는데, 그럼 이 기업이 자발적으로 공시를 하지 않는 이상 어느 국가에서 얼마나 매출을 발생시키고 있는지 알 수 있는 방법이 없어?
(관계자 인터뷰 같은 방법처럼 해당 기업을 통하여 알아내는 방법 당연히 제외)
INFO:     127.0.0.1:52890 - "POST /chat HTTP/1.1" 200 OK
해외에서 설립한 해외법인이 직접 생산하여 판매한다면 수출자료에 안나올 것 같아. 이러한 경우에는 어떤 방법이 있지? 위에 나열한 방법 말고
INFO:     127.0.0.1:46592 - "POST /chat HTTP/1.1" 200 OK
만약 해외에서도 공시대상이 아니라 별도 보고를 하지 않는다면?
INFO:     127.0.0.1:39392 - "POST /chat HTTP/1.1" 200 OK
중국에서는 중소기업 또는 소규모 법인회사의 공시 기준이 어떻게 돼?
INFO:     127.0.0.1:35376 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-44473' coro=<<async_generator_athrow without __name__>()>>
그러니까 중국 공시 대상 기준이 어떻게 되니
INFO:     127.0.0.1:41724 - "POST /chat HTTP/1.1" 200 OK
재무적 요건을 상세히 알려줘야지..
INFO:     127.0.0.1:33556 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-47310' coro=<<async_generator_athrow without __name__>()>>
그러니까 그 요건을 정확히 알려줘. 중국 공시 요건. 예를 들어 매출은 얼마 이상이 되어야하고 그런것들
INFO:     127.0.0.1:56954 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-48983' coro=<<async_generator_athrow without __name__>()>>
해당 금액 단위를  대한민국 원으로 환산해서 알려줘
INFO:     127.0.0.1:43208 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-51033' coro=<<async_generator_athrow without __name__>()>>
중국 공시 요건에 대한 재무 지표를 한국 원화로 알려줘!
INFO:     127.0.0.1:37152 - "POST /chat HTTP/1.1" 200 OK
상장이 아니라 공시 요건!
INFO:     127.0.0.1:34438 - "POST /chat HTTP/1.1" 200 OK
.... 그 뜻이 아닐텐데
INFO:     127.0.0.1:53304 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-55146' coro=<<async_generator_athrow without __name__>()>>
hi
what is your job?
최근 대한민국 출생율 정보 알려줘
몽고 DB에서 원하는 다큐먼트를 삭제하는 파이썬 코드 알려줘
알겠어
Hi paid GPT
oh are you? I thought you were GPT-4o
which version?
I guess OpenAI provides several versions of Chat GPT like GPT3.5, GPT4o or so
so which version are you
that's paid one isnt it
GPT-4.0 는 유료버전 아니니
but your previously told me that you are a free version of OpenAI's Chat GPT
유료버전이라묘요
아니 챗지피티 4.0 유료버전 아닙니까
너 4.0 아니니
너는 gpt 버전이 뭐니?
너는 유료버전이니?
너는 GPT 버전이 뭐니?
hi
아래 코드 설명해줘

from datetime import timedelta
import pendulum
local_tz = pendulum.timezone("Asia/Seoul")

from glob import glob
import warnings
warnings.filterwarnings('ignore')

from airflow.models import DAG
from airflow.utils.dates import days_ago
from airflow.operators.python import PythonOperator, PythonVirtualenvOperator
from airflow.operators.dummy import DummyOperator
from airflow.decorators import task

import sys
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model")

sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model")
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/model")
sys.path.append("/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/utils")

import smtplib
from email.mime.text import MIMEText
from datetime import date, datetime, timezone, timedelta

#from shop_model.shop_model_test import model_test

from hatchery_extract_model.model import *
from hatchery_extract_model.utils import *
from hatchery_extract_model.extract_info_main import *


## function 01 ##
### Price Extract ###
def coupang_info():
    # url 정보 가져오기
    with open('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/utils/mongo.yaml') as f:
        config = yaml.safe_load(f)

    mongo_uri = config["config"]["mongo_uri"]

    coupang_docs = get_data_mallname(mongo_uri, "쿠팡")
    prices_id, mall_url, pre_price = get_url_info(coupang_docs)


    # 정보 추출
    ## coupang번가 가격 정보 추출
    price_result, fee_result = price_extract(mall_url, "coupang", 35)


    # collection 가져오기
    products_collection, prices_collection, categories_collection = get_collection(mongo_uri)

    price_range_data_01 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba01_new_list.xlsx')
    price_range_data_02 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba02_new_list.xlsx')
    price_range_data_03 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba03_new_list.xlsx')
    price_range_data_04 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba04_new_list.xlsx')
    price_range_data_05 = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/ba05_new_list.xlsx')
    price_range_data_tmp = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/tmp_new_list.xlsx')
    price_range_data_keyboard = pd.read_excel('/data/shopai/dags/hatchery-shopai-v2-model/hatchery_extract_model/outputs/keyboard_new_list.xlsx')

    price_range_data = pd.concat([price_range_data_01,
                                  price_range_data_02,
                                  price_range_data_03,
                                  price_range_data_04,
                                  price_range_data_05,
                                  price_range_data_tmp,
                                  price_range_data_keyboard], axis = 0).reset_index(drop = True)

    # 쿠팡 price 전처리
    price = []
    for i in range(len(price_result)):
        query = {"_id": prices_id[i]}
        product_id = prices_collection.find_one(query)['productId']

        query = {"_id" : product_id}
        thumbnail_url = products_collection.find_one(query)['thumbnail']

        low_price = price_range_data[price_range_data['image_url'] == thumbnail_url].price_low.values[0]
        high_price = price_range_data[price_range_data['image_url'] == thumbnail_url].price_high.values[0]

        try:
            if (price_result[i] >= low_price) and (price_result[i] <= high_price):
                price.append(price_result[i] + fee_result[i])
            else:   
                price.append(pre_price[i])
        except:
            price.append(pre_price[i])

    # 몽고DB에 가격정보 삽입
    insert_price_info(prices_collection, price, prices_id)


def coupang_batch_alarm():
    exp_day = str(date.today())

    KST = timezone(timedelta(hours=9))
    time_record = datetime.now(KST)
    _day = str(time_record)[:10]
    _time = str(time_record.time())[:8]

    smtp = smtplib.SMTP('smtp.gmail.com', 587)
    smtp.ehlo()      # say Hello
    smtp.starttls()  # TLS 사용시 필요
    smtp.login('dhkim@hatchery.kr', 'jysnmejkxylqzpcm')

    msg = "쿠팡 배치가 완료 되었습니다."

    msg = MIMEText(msg)
    msg['Subject'] = f'{_time} 쿠팡 배치 완료!'
    msg['To'] = 'dhkim@hatchery.kr'
    smtp.sendmail('dhkim@hatchery.kr', 'dhkim@hatchery.kr', msg.as_string())
    smtp.sendmail('dhkim@hatchery.kr', 'kwon.dogeun@hatchery.kr', msg.as_string())

    smtp.quit()


## connect function ##
args = {'owner': 'dongha',
        'start_date': days_ago(n=1),
        'tzinfo' : local_tz}

with DAG(dag_id = 'coupang_info',
          default_args = args,
          schedule_interval = timedelta(minutes=30)) as dag:

    start = DummyOperator(task_id = 'dummy_start', dag = dag)
    end = DummyOperator(task_id = 'dummy_end', dag = dag)

    t1 = PythonOperator(task_id = 'coupang_info',
                        provide_context = True,
                        python_callable = coupang_info,
                        dag = dag)

    t2 = PythonOperator(task_id = 'coupang_batch_alarm',
                        provide_context = True,
                        python_callable = coupang_batch_alarm,
                        dag = dag)

    start >> t1 >> t2 >> end
how frequent should a regular person go out for running to optimize one's brain efficiency 
how does 3km at paced 6 sound like
6 wasn
3km for about 25 min
how frequent should a regular person go out for running to optimize one's brain efficiency
i wasn't walking.. it was a running pace
how does 3km at paced 6 sound like
몽고 DB에서 리스트 값을 갖는 logs의 createdAt가 6월 18일 이전의 것들인 항목을 삭제하는 파이썬 코드
how about 3km for 17 min
how long should i take a break after having supper for running as above
how about right after running? how long should I take a break to have a supper after running as bove
빠르게
한국에서 외감대상인 비상장 중소기업이 비외감 대상인 자회사 또는 해외 법인이 있을 때, 연결재무제표 공시를 하지 않아도 된다고 알고있는데, 그럼 이 기업이 자발적으로 공시를 하지 않는 이상 어느 국가에서 얼마나 매출을 발생시키고 있는지 알 수 있는 방법이 없어?
(관계자 인터뷰 같은 방법처럼 해당 기업을 통하여 알아내는 방법 당연히 제외)
해외에서 설립한 해외법인이 직접 생산하여 판매한다면 수출자료에 안나올 것 같아. 이러한 경우에는 어떤 방법이 있지? 위에 나열한 방법 말고
만약 해외에서도 공시대상이 아니라 별도 보고를 하지 않는다면?
중국에서는 중소기업 또는 소규모 법인회사의 공시 기준이 어떻게 돼?
그러니까 중국 공시 대상 기준이 어떻게 되니
재무적 요건을 상세히 알려줘야지..
그러니까 그 요건을 정확히 알려줘. 중국 공시 요건. 예를 들어 매출은 얼마 이상이 되어야하고 그런것들
해당 금액 단위를  대한민국 원으로 환산해서 알려줘
중국 공시 요건에 대한 재무 지표를 한국 원화로 알려줘!
상장이 아니라 공시 요건!
.... 그 뜻이 아닐텐데
상세히 설명을해도 네가 동문서답을하면 어떻게 해야하니
INFO:     127.0.0.1:59864 - "POST /chat HTTP/1.1" 200 OK
중국에서 비상장 회사가 공시해야하는 조건이 있어? 있다면 재무지표 등, 상세한 요건을 한국 원화로 알려줘
INFO:     127.0.0.1:48426 - "POST /chat HTTP/1.1" 200 OK
중국 공시자료를 볼 수 있는 웹사이트 링크를 줘
INFO:     127.0.0.1:47194 - "POST /chat HTTP/1.1" 200 OK
한국의 경우는?
INFO:     127.0.0.1:43012 - "POST /chat HTTP/1.1" 200 OK
한국 공시자료는 어디서 확인 가능하지?
INFO:     127.0.0.1:60870 - "POST /chat HTTP/1.1" 200 OK
중국에 한국의 전자공시시스템과 같은 웹사이트가 있어? 있다면 링크좀
INFO:     127.0.0.1:57108 - "POST /chat HTTP/1.1" 200 OK
서로 겹치는 정보가 있니? 
INFO:     127.0.0.1:50376 - "POST /chat HTTP/1.1" 200 OK
11번가 api 횟수 제한
INFO:     127.0.0.1:43700 - "POST /chat HTTP/1.1" 200 OK
금영엔터테인먼트의 중국 법인이 중국에서 고시하고 있니
INFO:     127.0.0.1:38398 - "POST /chat HTTP/1.1" 200 OK
강아지 키우고 싶어 근데 내가 나를 키우기도 힘들다
INFO:     127.0.0.1:45004 - "POST /chat HTTP/1.1" 200 OK
일반적으로 강아지를 키우는데에 한달에 얼마정도의 비용과 시간이 들어? 구체적인 숫자를 줘
INFO:     127.0.0.1:52140 - "POST /chat HTTP/1.1" 200 OK
강아지 유치원은 얼마나
INFO:     127.0.0.1:56062 - "POST /chat HTTP/1.1" 200 OK
금영의 중국 제조회사 법인에 대해서 네가 알고 있는 모든걸 알려줘
INFO:     127.0.0.1:53766 - "POST /chat HTTP/1.1" 200 OK
정확한걸 찾아서 알려줘야지 내가 방법을 몰라서 물어보는건 아니지 않을까?
INFO:     127.0.0.1:36690 - "POST /chat HTTP/1.1" 200 OK
금영 중국이름알려줘 중국어로. 공시시스템에 검색해볼거야
INFO:     127.0.0.1:41810 - "POST /chat HTTP/1.1" 200 OK
안나오네... 찾아줘
INFO:     127.0.0.1:40550 - "POST /chat HTTP/1.1" 200 OK
단어단어 기준으로 답변을 주는구나
INFO:     127.0.0.1:59254 - "POST /chat HTTP/1.1" 200 OK
아니 나의 질문에 대해서...
INFO:     127.0.0.1:42250 - "POST /chat HTTP/1.1" 200 OK
외감 비외감을 영어로 뭐라고해?
INFO:     127.0.0.1:46332 - "POST /chat HTTP/1.1" 200 OK
 does US have a standard or criteria to meet for a company being required to be Audited externally?
INFO:     127.0.0.1:57532 - "POST /chat HTTP/1.1" 200 OK
for a private company, please give me a specific criteria such as minimum revenue in KWN
INFO:     127.0.0.1:55010 - "POST /chat HTTP/1.1" 200 OK
for a private company that are required to be audited externally., please give me a specific criteria such as minimum revenue in KWN
INFO:     127.0.0.1:43166 - "POST /chat HTTP/1.1" 200 OK
so 미국에서 공시대상의 기준이 한화 매출 500억이라는거지? 총자산은 120억,  총 임직원 수는 300명
INFO:     127.0.0.1:38044 - "POST /chat HTTP/1.1" 200 OK
Karaoke Smart와 Kanto의 관계를 알려줘. 네가 알고 있는 모든 선에서.
INFO:     127.0.0.1:40092 - "POST /chat HTTP/1.1" 200 OK
둘 다 회사야ㅐ 회사
INFO:     127.0.0.1:43778 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-83718' coro=<<async_generator_athrow without __name__>()>>
Karaoke Smart라는 회사와 Kanto라는 회사의 관계를 찾아서 설명해줘
INFO:     127.0.0.1:59382 - "POST /chat HTTP/1.1" 200 OK
충격적이네....
INFO:     127.0.0.1:56498 - "POST /chat HTTP/1.1" 200 OK
Task was destroyed but it is pending!
task: <Task pending name='Task-84784' coro=<<async_generator_athrow without __name__>()>>
Karaoke Smart라는 회사와 Kanto라는 회사의 관계를 찾아서 설명해줘
INFO:     127.0.0.1:42820 - "POST /chat HTTP/1.1" 200 OK
몽고 DB에서 prices collection안에 각 document에 logs라는 컬럼이 있고 그 안에 가격들이 리스트 형식으로 들어있어 각 값에는 createdAt라는 생성 시간 정보가 있는데 리스트 값 중 createdAt가 6월 18일 이전인 값을 삭제하는 파이썬 코드
INFO:     127.0.0.1:43622 - "POST /chat HTTP/1.1" 200 OK
WARNING:  Invalid HTTP request received.
sell out 과 sell in 차이가 뭐더라
INFO:     127.0.0.1:42454 - "POST /chat HTTP/1.1" 200 OK
air비용이 뭐야
INFO:     127.0.0.1:43560 - "POST /chat HTTP/1.1" 200 OK
오늘의 명언 하나 추천해줘 영어로
INFO:     127.0.0.1:51720 - "POST /chat HTTP/1.1" 200 OK
sell out 과 sell in 차이가 뭐더라
INFO:     127.0.0.1:39920 - "POST /chat HTTP/1.1" 200 OK
air 비용이 뭐야
INFO:     127.0.0.1:54556 - "POST /chat HTTP/1.1" 200 OK
2024-07-10 10:45:41.854 Uncaught app exception
Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 69, in map_httpcore_exceptions
    yield
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 373, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 216, in handle_async_request
    raise exc from None
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 196, in handle_async_request
    response = await connection.handle_async_request(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection.py", line 99, in handle_async_request
    raise exc
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection.py", line 76, in handle_async_request
    stream = await self._connect(request)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_async/connection.py", line 122, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_backends/auto.py", line 30, in connect_tcp
    return await self._backend.connect_tcp(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 114, in connect_tcp
    with map_exceptions(exc_map):
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/dongha/openai/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 589, in _run_script
    exec(code, module.__dict__)
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 61, in <module>
    chat_main()  # 챗봇 애플리케이션 시작
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 58, in chat_main
    loop.run_until_complete(handle_chat(message))  # handle_chat 함수를 실행하여 사용자의 메시지를 처리
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 44, in handle_chat
    async for chunk in request_chat_api(message):  # 챗봇 API로부터 응답을 청크 단위로 받음
  File "/home/dongha/langchain-prac/chat/_ui/app.py", line 10, in request_chat_api
    async with client.stream("POST", API_BASE_URL, json={"message": message}, timeout=None) as response:
  File "/usr/lib/python3.10/contextlib.py", line 199, in __aenter__
    return await anext(self.gen)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1617, in stream
    response = await self.send(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1661, in send
    response = await self._send_handling_auth(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1689, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1726, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_client.py", line 1763, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 372, in handle_async_request
    with map_httpcore_exceptions():
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/dongha/openai/lib/python3.10/site-packages/httpx/_transports/default.py", line 86, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed
INFO:     Started server process [304673]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     Uvicorn running on http://0.0.0.0:123 (Press CTRL+C to quit)
hi
INFO:     127.0.0.1:39960 - "POST /chat HTTP/1.1" 200 OK
